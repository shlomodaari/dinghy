{
  "_comment": "THIS IS GENERATED CODE. DO NOT EDIT!",
  "application": "gonfalon",
  "pipelines": [
    {
      "appConfig": {},
      "application": "gonfalon",
      "expectedArtifacts": [],
      "keepWaitingPipelines": false,
      "limitConcurrent": true,
      "name": "gonfalon-web - catamorphic",
      "notifications": [
        {
          "address": "eng-deploys",
          "level": "pipeline",
          "type": "slack",
          "when": [
            "pipeline.failed"
          ]
        },
        {
          "address": "ops-deploy-alerts",
          "level": "pipeline",
          "type": "slack",
          "when": [
            "pipeline.failed"
          ]
        },
        {
          "address": "gonfalon-drift-email.oqd3r7nr@launchdarkly.pagerduty.com",
          "level": "pipeline",
          "type": "email",
          "when": [
            "pipeline.failed"
          ]
        }
      ],
      "parameterConfig": [
        {
          "name": "sha",
          "description": "Artifact SHA to deploy",
          "hasOptions": false,
          "label": "Artifact SHA to deploy",
          "required": true,
          "default": ""
        },
        {
          "name": "ec2_instance_type",
          "description": "EC2 instance type",
          "hasOptions": true,
          "label": "EC2 instance type",
          "required": true,
          "options": [
            {
              "value": "m5a.xlarge"
            },
            {
              "value": "m5a.2xlarge"
            }
          ],
          "default": "m5a.xlarge"
        },
        {
          "name": "base_ami_name_prefix",
          "description": "Prefix for the base AMI name",
          "hasOptions": false,
          "label": "Prefix for the base AMI name",
          "required": true,
          "default": "ld-"
        },
        {
          "name": "rollbar_access_token_ssm_path",
          "description": "Rollbar Access Token SSM Path",
          "hasOptions": false,
          "label": "",
          "required": false,
          "default": "/global/services/gonfalon/rollbar_token"
        },
        {
          "name": "sleuth_api_key_ssm_path",
          "description": "Sleuth Api Key SSM Path",
          "hasOptions": false,
          "label": "",
          "required": false,
          "default": "/global/services/sleuth/api_key"
        },
        {
          "name": "honeycomb_api_key_ssm_path",
          "description": "Honeycomb Api Key SSM Path",
          "hasOptions": false,
          "label": "",
          "required": false,
          "default": "/catamorphic/common/services/honeycomb/write_key"
        }
      ],
      "stages": [
        {
          "continuePipeline": true,
          "customHeaders": {
            "X-LD-Private": "allowed"
          },
          "failPipeline": false,
          "method": "GET",
          "name": "Determine current version",
          "overrideTimeout": true,
          "refId": "determine_deployed_app_version",
          "requisiteStageRefIds": [],
          "stageTimeoutMs": 60000,
          "type": "webhook",
          "url": "https://gonfalon-internal.ld.catamorphic.com/api/status"
        },
        {
          "method": "POST",
          "name": "Seek #eng-deploys deploy approval",
          "overrideTimeout": true,
          "payload": {
            "channel": "#eng-deploys",
            "text": "${ trigger.user } wants to :deploying: gonfalon-web - catamorphic with version ${ parameters['sha'] }.\nSHA diff is: https://github.com/launchdarkly/gonfalon/compare/${ #stage('Determine current version')['status'].toString() == 'SUCCEEDED' ? #stage('Determine current version')['context']['webhook']['body']['version'] : 'unknown' }...${ parameters['sha'] } | See https://deploy.launchdarkly.com/#/applications/gonfalon/executions/${ execution.id } for more information.\n\n:thumbsup: / :thumbsdown:?"
          },
          "refId": "notification_deploy_waiting_for_approval_eng-deploys",
          "requisiteStageRefIds": [
            "determine_deployed_app_version"
          ],
          "stageEnabled": {
            "expression": "!(trigger['payload'] != null \u0026\u0026 trigger['payload']['status'] == 'thumbed')",
            "type": "expression"
          },
          "stageTimeoutMs": 60000,
          "type": "webhook",
          "url": "https://hooks.slack.com/services/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"
        },
        {
          "failPipeline": true,
          "instructions": "Deploying gonfalon-web - catamorphic with version ${ parameters['sha'] }. The diff is: https://github.com/launchdarkly/gonfalon/compare/${ #stage('Determine current version')['status'].toString() == 'SUCCEEDED' ? #stage('Determine current version')['context']['webhook']['body']['version'] : 'unknown' }...${ parameters['sha'] }",
          "judgmentInputs": [],
          "name": "Confirm that deploy should continue",
          "notifications": [
            {
              "address": "deploys",
              "level": "stage",
              "type": "slack",
              "when": [
                "manualJudgment",
                "manualJudgmentContinue",
                "manualJudgmentStop"
              ]
            }
          ],
          "overrideTimeout": true,
          "refId": "confirm_deployment",
          "requisiteStageRefIds": [
            "notification_deploy_waiting_for_approval_eng-deploys"
          ],
          "sendNotifications": true,
          "stageEnabled": {
            "expression": "!(trigger['payload'] != null \u0026\u0026 trigger['payload']['status'] == 'thumbed')",
            "type": "expression"
          },
          "stageTimeoutMs": 3600000,
          "type": "manualJudgment"
        },
        {
          "continuePipeline": true,
          "failPipeline": false,
          "method": "POST",
          "name": "Notify #ops-catamorphic deploy is happening",
          "overrideTimeout": true,
          "payload": {
            "channel": "#ops-catamorphic",
            "text": "${ trigger.user } is really :deploying: gonfalon-web - catamorphic with version ${ parameters.sha }. Follow progress at https://deploy.launchdarkly.com/#/applications/gonfalon/executions/${ execution.id } "
          },
          "refId": "notification_deploy_start_ops-catamorphic",
          "requisiteStageRefIds": [
            "confirm_deployment"
          ],
          "stageTimeoutMs": 60000,
          "type": "webhook",
          "url": "https://hooks.slack.com/services/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"
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "completeOtherBranchesThenFail": true,
          "continuePipeline": true,
          "credentials": "kubernetes",
          "failPipeline": false,
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "notifier",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "env": [
                        {
                          "name": "METHOD",
                          "value": "POST"
                        },
                        {
                          "name": "URL",
                          "value": "https://api.rollbar.com/api/1/deploy"
                        },
                        {
                          "name": "BODY",
                          "value": "{\n\t\t\"access_token\":   \"{{`{{ ssm \"${ parameters.rollbar_access_token_ssm_path }\" }}`}}\",\n\t\t\"environment\":    \"catamorphic\",\n\t\t\"local_username\": \"${ trigger.user }\",\n\t\t\"revision\":       \"${ parameters.sha }\",\n\t\t\"status\":         \"started\"\n\t}"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "ASSUME_ROLE",
                          "value": "SpinnakerManagedRole"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "554582317989"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/notifier:latest",
                      "name": "notifier"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Publish to Rollbar (started)",
          "refId": "rollbar_started",
          "requisiteStageRefIds": [
            "confirm_deployment"
          ],
          "source": "text",
          "stageEnabled": {
            "expression": "parameters.rollbar_access_token_ssm_path != ''",
            "type": "expression"
          },
          "stageTimeoutMs": 60000,
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "cloudProvider": "aws",
          "cloudProviderType": "aws",
          "name": "Lookup AMI ID for Baked Artifact AMI",
          "overrideTimeout": true,
          "packageName": "gonfalon-web-${ parameters.sha }*ubuntu",
          "refId": "lookup_baked_artifact_ami_id",
          "regions": [
            "us-east-1"
          ],
          "requisiteStageRefIds": [
            "determine_deployed_app_version",
            "notification_deploy_waiting_for_approval_eng-deploys",
            "confirm_deployment"
          ],
          "stageTimeoutMs": 60000,
          "tags": {},
          "type": "findImageFromTags"
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "save-flags-json",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "env": [
                        {
                          "name": "SDK_KEY_SSM_PARAMETER",
                          "value": "/catamorphic/common/services/launchdarkly-catamorphic/sdk_key"
                        },
                        {
                          "name": "S3_BUCKET",
                          "value": "launchdarkly-configs"
                        },
                        {
                          "name": "S3_KEY",
                          "value": "catamorphic/gonfalon/flags.json"
                        },
                        {
                          "name": "CATFOOD_URL",
                          "value": "https://app.ld.catamorphic.com"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "554582317989"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/save-flags-json:latest",
                      "name": "flags-json"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Save flags.json to S3 - us-east-1",
          "refId": "save_flags_json_us-east-1",
          "requisiteStageRefIds": [
            "lookup_baked_artifact_ami_id"
          ],
          "source": "text",
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "run-db-migrations-coderefs-crdb",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "command": [
                        "/bin/run-migrations"
                      ],
                      "env": [
                        {
                          "name": "SHA",
                          "value": "${ parameters['sha'] }"
                        },
                        {
                          "name": "DATABASE",
                          "value": "coderefs-crdb"
                        },
                        {
                          "name": "ENV_SHORT_NAME",
                          "value": "catamorphic"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "554582317989"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/mild:latest",
                      "name": "run-migrations"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Run DB migrations for coderefs-crdb",
          "refId": "run_db_migrations_coderefs-crdb",
          "requisiteStageRefIds": [
            "lookup_baked_artifact_ami_id"
          ],
          "source": "text",
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "run-db-migrations-oauth2-crdb",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "command": [
                        "/bin/run-migrations"
                      ],
                      "env": [
                        {
                          "name": "SHA",
                          "value": "${ parameters['sha'] }"
                        },
                        {
                          "name": "DATABASE",
                          "value": "oauth2-crdb"
                        },
                        {
                          "name": "ENV_SHORT_NAME",
                          "value": "catamorphic"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "554582317989"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/mild:latest",
                      "name": "run-migrations"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Run DB migrations for oauth2-crdb",
          "refId": "run_db_migrations_oauth2-crdb",
          "requisiteStageRefIds": [
            "lookup_baked_artifact_ami_id"
          ],
          "source": "text",
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "run-db-migrations-accounts-crdb",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "command": [
                        "/bin/run-migrations"
                      ],
                      "env": [
                        {
                          "name": "SHA",
                          "value": "${ parameters['sha'] }"
                        },
                        {
                          "name": "DATABASE",
                          "value": "accounts-crdb"
                        },
                        {
                          "name": "ENV_SHORT_NAME",
                          "value": "catamorphic"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "554582317989"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/mild:latest",
                      "name": "run-migrations"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Run DB migrations for accounts-crdb",
          "refId": "run_db_migrations_accounts-crdb",
          "requisiteStageRefIds": [
            "lookup_baked_artifact_ami_id"
          ],
          "source": "text",
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "run-db-migrations-gonfalon-accounts-crdb",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "command": [
                        "/bin/run-migrations"
                      ],
                      "env": [
                        {
                          "name": "SHA",
                          "value": "${ parameters['sha'] }"
                        },
                        {
                          "name": "DATABASE",
                          "value": "gonfalon-accounts-crdb"
                        },
                        {
                          "name": "ENV_SHORT_NAME",
                          "value": "catamorphic"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "554582317989"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/mild:latest",
                      "name": "run-migrations"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Run DB migrations for gonfalon-accounts-crdb",
          "refId": "run_db_migrations_gonfalon-accounts-crdb",
          "requisiteStageRefIds": [
            "lookup_baked_artifact_ami_id"
          ],
          "source": "text",
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "run-db-migrations-gonfalon-billing-crdb",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "command": [
                        "/bin/run-migrations"
                      ],
                      "env": [
                        {
                          "name": "SHA",
                          "value": "${ parameters['sha'] }"
                        },
                        {
                          "name": "DATABASE",
                          "value": "gonfalon-billing-crdb"
                        },
                        {
                          "name": "ENV_SHORT_NAME",
                          "value": "catamorphic"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "554582317989"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/mild:latest",
                      "name": "run-migrations"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Run DB migrations for gonfalon-billing-crdb",
          "refId": "run_db_migrations_gonfalon-billing-crdb",
          "requisiteStageRefIds": [
            "lookup_baked_artifact_ami_id"
          ],
          "source": "text",
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "run-db-migrations-gonfalon-file-jobs-crdb",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "command": [
                        "/bin/run-migrations"
                      ],
                      "env": [
                        {
                          "name": "SHA",
                          "value": "${ parameters['sha'] }"
                        },
                        {
                          "name": "DATABASE",
                          "value": "gonfalon-file-jobs-crdb"
                        },
                        {
                          "name": "ENV_SHORT_NAME",
                          "value": "catamorphic"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "554582317989"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/mild:latest",
                      "name": "run-migrations"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Run DB migrations for gonfalon-file-jobs-crdb",
          "refId": "run_db_migrations_gonfalon-file-jobs-crdb",
          "requisiteStageRefIds": [
            "lookup_baked_artifact_ami_id"
          ],
          "source": "text",
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "run-db-migrations-gonfalon-integrations-crdb",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "command": [
                        "/bin/run-migrations"
                      ],
                      "env": [
                        {
                          "name": "SHA",
                          "value": "${ parameters['sha'] }"
                        },
                        {
                          "name": "DATABASE",
                          "value": "gonfalon-integrations-crdb"
                        },
                        {
                          "name": "ENV_SHORT_NAME",
                          "value": "catamorphic"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "554582317989"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/mild:latest",
                      "name": "run-migrations"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Run DB migrations for gonfalon-integrations-crdb",
          "refId": "run_db_migrations_gonfalon-integrations-crdb",
          "requisiteStageRefIds": [
            "lookup_baked_artifact_ami_id"
          ],
          "source": "text",
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "run-db-migrations-gonfalon-workflows-crdb",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "command": [
                        "/bin/run-migrations"
                      ],
                      "env": [
                        {
                          "name": "SHA",
                          "value": "${ parameters['sha'] }"
                        },
                        {
                          "name": "DATABASE",
                          "value": "gonfalon-workflows-crdb"
                        },
                        {
                          "name": "ENV_SHORT_NAME",
                          "value": "catamorphic"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "554582317989"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/mild:latest",
                      "name": "run-migrations"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Run DB migrations for gonfalon-workflows-crdb",
          "refId": "run_db_migrations_gonfalon-workflows-crdb",
          "requisiteStageRefIds": [
            "lookup_baked_artifact_ami_id"
          ],
          "source": "text",
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "run-db-migrations-gonfalon-experimentation-crdb",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "command": [
                        "/bin/run-migrations"
                      ],
                      "env": [
                        {
                          "name": "SHA",
                          "value": "${ parameters['sha'] }"
                        },
                        {
                          "name": "DATABASE",
                          "value": "gonfalon-experimentation-crdb"
                        },
                        {
                          "name": "ENV_SHORT_NAME",
                          "value": "catamorphic"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "554582317989"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/mild:latest",
                      "name": "run-migrations"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Run DB migrations for gonfalon-experimentation-crdb",
          "refId": "run_db_migrations_gonfalon-experimentation-crdb",
          "requisiteStageRefIds": [
            "lookup_baked_artifact_ami_id"
          ],
          "source": "text",
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "clusters": [
            {
              "account": "launchdarkly-production",
              "application": "gonfalon",
              "associatePublicIpAddress": false,
              "availabilityZones": {
                "us-east-1": [
                  "us-east-1a",
                  "us-east-1b",
                  "us-east-1c"
                ]
              },
              "base64UserData": "",
              "capacity": {
                "desired": 2,
                "max": 2,
                "min": 2
              },
              "cloudProvider": "aws",
              "cooldown": 120,
              "copySourceCustomBlockDeviceMappings": false,
              "delayBeforeDisableSec": 60,
              "delayBeforeScaleDownSec": 1800,
              "dirty": {},
              "ebsOptimized": false,
              "enabledMetrics": [
                "GroupMinSize",
                "GroupMaxSize",
                "GroupDesiredCapacity",
                "GroupInServiceInstances",
                "GroupPendingInstances",
                "GroupStandbyInstances",
                "GroupTerminatingInstances",
                "GroupTotalInstances"
              ],
              "freeFormDetails": "cat-prod",
              "healthCheckGracePeriod": 240,
              "healthCheckType": "ELB",
              "iamRole": "catamorphic-gonfalon",
              "instanceMonitoring": true,
              "instanceType": "${ parameters.ec2_instance_type }",
              "keyPair": "ld_shared",
              "launchTemplateOverridesForInstanceType": null,
              "loadBalancers": [],
              "maxRemainingAsgs": 2,
              "moniker": {
                "app": "gonfalon",
                "detail": "cat-prod",
                "stack": "web"
              },
              "preferSourceCapacity": true,
              "provider": "aws",
              "rollback": {
                "onFailure": true
              },
              "scaleDown": true,
              "securityGroups": [
                "sg-2c23fc5b",
                "sg-aee1e0d3",
                "sg-4346cb0b",
                "sg-a5a04ddb",
                "sg-be2c24c3",
                "sg-05fbc06f9515babb5",
                "sg-09d3793013933e078",
                "sg-0b2afe701154406c0",
                "sg-02011051ee48dc396",
                "sg-007c843f1dcaaaf84",
                "sg-0d160cc271f1701c9",
                "sg-0c7175ae3974bc358",
                "sg-0fc340445caae75bb",
                "sg-0d5a1a14328634410",
                "sg-009bb53e15e6d7f0b"
              ],
              "setLaunchTemplate": false,
              "spelLoadBalancers": [],
              "spelTargetGroups": [],
              "spotPrice": "",
              "stack": "web",
              "strategy": "redblack",
              "subnetType": "catamorphic-private-subnet",
              "suspendedProcesses": [],
              "tags": {
                "Name": "gonfalon-web (catamorphic)",
                "dogfoodCanary": "false",
                "env": "catamorphic",
                "environment": "catamorphic",
                "managed_by": "spinnaker",
                "owner": "common",
                "region": "us-east-1",
                "role": "gonfalon-web",
                "service": "app.launchdarkly.com",
                "sha": "${ parameters.sha }",
                "tier": "production"
              },
              "targetGroups": [
                "gonfalon-web-cat-prod",
                "gonfalon-web-internal-cat-prod"
              ],
              "targetHealthyDeployPercentage": 100,
              "terminationPolicies": [
                "Default"
              ],
              "useAmiBlockDeviceMappings": true,
              "useSourceCapacity": true
            },
            {
              "account": "launchdarkly-production",
              "application": "gonfalon",
              "associatePublicIpAddress": false,
              "availabilityZones": {
                "us-east-1": [
                  "us-east-1a"
                ]
              },
              "base64UserData": "",
              "capacity": {
                "desired": 1,
                "max": 1,
                "min": 1
              },
              "cloudProvider": "aws",
              "cooldown": 120,
              "copySourceCustomBlockDeviceMappings": false,
              "delayBeforeDisableSec": 60,
              "delayBeforeScaleDownSec": 1800,
              "dirty": {},
              "ebsOptimized": false,
              "enabledMetrics": [
                "GroupMinSize",
                "GroupMaxSize",
                "GroupDesiredCapacity",
                "GroupInServiceInstances",
                "GroupPendingInstances",
                "GroupStandbyInstances",
                "GroupTerminatingInstances",
                "GroupTotalInstances"
              ],
              "freeFormDetails": "cat-prod-dogfood-canary",
              "healthCheckGracePeriod": 240,
              "healthCheckType": "ELB",
              "iamRole": "catamorphic-gonfalon",
              "instanceMonitoring": true,
              "instanceType": "${ parameters.ec2_instance_type }",
              "keyPair": "ld_shared",
              "launchTemplateOverridesForInstanceType": null,
              "loadBalancers": [],
              "maxRemainingAsgs": 2,
              "moniker": {
                "app": "gonfalon",
                "detail": "cat-prod",
                "stack": "web"
              },
              "preferSourceCapacity": true,
              "provider": "aws",
              "rollback": {
                "onFailure": true
              },
              "scaleDown": true,
              "securityGroups": [
                "sg-2c23fc5b",
                "sg-aee1e0d3",
                "sg-4346cb0b",
                "sg-a5a04ddb",
                "sg-be2c24c3",
                "sg-05fbc06f9515babb5",
                "sg-09d3793013933e078",
                "sg-0b2afe701154406c0",
                "sg-02011051ee48dc396",
                "sg-007c843f1dcaaaf84",
                "sg-0d160cc271f1701c9",
                "sg-0c7175ae3974bc358",
                "sg-0fc340445caae75bb",
                "sg-0d5a1a14328634410",
                "sg-009bb53e15e6d7f0b"
              ],
              "setLaunchTemplate": false,
              "spelLoadBalancers": [],
              "spelTargetGroups": [],
              "spotPrice": "",
              "stack": "web",
              "strategy": "redblack",
              "subnetType": "catamorphic-private-subnet",
              "suspendedProcesses": [],
              "tags": {
                "Name": "gonfalon-web (catamorphic)",
                "dogfoodCanary": "true",
                "env": "catamorphic",
                "environment": "catamorphic",
                "managed_by": "spinnaker",
                "owner": "common",
                "region": "us-east-1",
                "role": "gonfalon-web",
                "service": "app.launchdarkly.com",
                "sha": "${ parameters.sha }",
                "tier": "production"
              },
              "targetGroups": [
                "gonfalon-web-cat-prod",
                "gonfalon-web-internal-cat-prod"
              ],
              "targetHealthyDeployPercentage": 100,
              "terminationPolicies": [
                "Default"
              ],
              "useAmiBlockDeviceMappings": true,
              "useSourceCapacity": true
            }
          ],
          "customSubject": "Deployed gonfalon-web-${ parameters['sha'] } to catamorphic",
          "name": "Deploy application to AWS",
          "notifications": [
            {
              "address": "changelog-catamorphic@launchdarkly.com",
              "level": "stage",
              "message": {
                "stage.complete": {
                  "text": "Details: Deployed gonfalon-web-${ parameters['sha'] } to catamorphic.  The diff is: https://github.com/launchdarkly/gonfalon/compare/${ #stage('Determine current version')['status'].toString() == 'SUCCEEDED' ? #stage('Determine current version')['context']['webhook']['body']['version'] : 'unknown' }...${ parameters['sha'] }\n\n!catamorphic !deploy\n\nWho: ${ trigger['user'] } via ${ trigger['type'] } trigger\n\nTopic: gonfalon-web\n\nWhen: ${ new java.text.SimpleDateFormat('EEE MMM d HH:mm:ss z YYYY').format(new java.util.Date())}\n\n"
                }
              },
              "type": "email",
              "when": [
                "stage.complete"
              ]
            }
          ],
          "overrideTimeout": true,
          "refId": "deploy_aws_redblack",
          "requisiteStageRefIds": [
            "lookup_baked_artifact_ami_id",
            "save_flags_json_us-east-1",
            "run_db_migrations_coderefs-crdb",
            "run_db_migrations_oauth2-crdb",
            "run_db_migrations_accounts-crdb",
            "run_db_migrations_gonfalon-accounts-crdb",
            "run_db_migrations_gonfalon-billing-crdb",
            "run_db_migrations_gonfalon-file-jobs-crdb",
            "run_db_migrations_gonfalon-integrations-crdb",
            "run_db_migrations_gonfalon-workflows-crdb",
            "run_db_migrations_gonfalon-experimentation-crdb"
          ],
          "sendNotifications": true,
          "stageTimeoutMs": 7200000,
          "type": "deploy"
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "completeOtherBranchesThenFail": true,
          "continuePipeline": true,
          "credentials": "kubernetes",
          "failPipeline": false,
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "notifier",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "env": [
                        {
                          "name": "METHOD",
                          "value": "POST"
                        },
                        {
                          "name": "URL",
                          "value": "https://app.sleuth.io/api/1/deployments/launchdarkly/gonfalon-web/register_deploy?ignore_if_duplicate=true"
                        },
                        {
                          "name": "BODY",
                          "value": ""
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "FORM_api_key",
                          "value": "{{`{{ ssm \"${ parameters.sleuth_api_key_ssm_path }\" }}`}}"
                        },
                        {
                          "name": "FORM_environment",
                          "value": "catamorphic"
                        },
                        {
                          "name": "FORM_sha",
                          "value": "${ parameters.sha }"
                        },
                        {
                          "name": "ASSUME_ROLE",
                          "value": "SpinnakerManagedRole"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "554582317989"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/notifier:latest",
                      "name": "notifier"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Publish to Sleuth",
          "refId": "sleuth_publish",
          "requisiteStageRefIds": [
            "deploy_aws_redblack"
          ],
          "source": "text",
          "stageEnabled": {
            "expression": "sleuth_api_key_ssm_path != ''",
            "type": "expression"
          },
          "stageTimeoutMs": 60000,
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "completeOtherBranchesThenFail": true,
          "continuePipeline": true,
          "credentials": "kubernetes",
          "failPipeline": false,
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "notifier",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "env": [
                        {
                          "name": "METHOD",
                          "value": "POST"
                        },
                        {
                          "name": "URL",
                          "value": "https://api.honeycomb.io/1/markers/managed-catamorphic"
                        },
                        {
                          "name": "BODY",
                          "value": "{\n\t\t\"message\" : \"gonfalon - catamorphic - Deployment - sha: ${ parameters.sha }\",\n\t\t\"type\":\"deploy\"\n\t}"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "ASSUME_ROLE",
                          "value": "SpinnakerManagedRole"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "554582317989"
                        },
                        {
                          "name": "HEADER_Accept",
                          "value": "application/json"
                        },
                        {
                          "name": "HEADER_Content_Type",
                          "value": "application/json"
                        },
                        {
                          "name": "HEADER_X_Honeycomb_Team",
                          "value": "{{`{{ ssm \"${ parameters.honeycomb_api_key_ssm_path }\" }}`}}"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/notifier:latest",
                      "name": "notifier"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Publish to Honeycomb",
          "refId": "honeycomb_publish",
          "requisiteStageRefIds": [
            "deploy_aws_redblack"
          ],
          "source": "text",
          "stageEnabled": {
            "expression": "honeycomb_api_key_ssm_path != ''",
            "type": "expression"
          },
          "stageTimeoutMs": 60000,
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "failPipeline": false,
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "notifier",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "env": [
                        {
                          "name": "METHOD",
                          "value": "POST"
                        },
                        {
                          "name": "URL",
                          "value": "https://app.ld.catamorphic.com/api/v2/accelerate/deployment-events"
                        },
                        {
                          "name": "BODY",
                          "value": "{\n  \"environmentKey\": \"catamorphic\",\n  \"eventType\": \"started\",\n  \"projectKey\": \"default\",\n  \"service\": \"gonfalon\",\n  \"version\": \"${ parameters.sha }\"\n}"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "HEADER_Authorization",
                          "value": "{{`{{ ssm \"/shared-services/common/services/accelerate/ld_api_key\" }}`}}"
                        },
                        {
                          "name": "HEADER_Content_Type",
                          "value": "application/json"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/notifier:latest",
                      "name": "notifier"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Send Accelerate started notification",
          "refId": "accelerate_started",
          "requisiteStageRefIds": [
            "determine_deployed_app_version"
          ],
          "source": "text",
          "stageEnabled": {
            "expression": "",
            "type": "expression"
          },
          "stageTimeoutMs": 60000,
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "failPipeline": false,
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "notifier",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "env": [
                        {
                          "name": "METHOD",
                          "value": "POST"
                        },
                        {
                          "name": "URL",
                          "value": "https://app.ld.catamorphic.com/api/v2/accelerate/deployment-events"
                        },
                        {
                          "name": "BODY",
                          "value": "{\n  \"environmentKey\": \"catamorphic\",\n  \"eventType\": \"finished\",\n  \"projectKey\": \"default\",\n  \"service\": \"gonfalon\",\n  \"version\": \"${ parameters.sha }\"\n}"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "HEADER_Authorization",
                          "value": "{{`{{ ssm \"/shared-services/common/services/accelerate/ld_api_key\" }}`}}"
                        },
                        {
                          "name": "HEADER_Content_Type",
                          "value": "application/json"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/notifier:latest",
                      "name": "notifier"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Send Accelerate finished notification",
          "refId": "accelerate_finished",
          "requisiteStageRefIds": [
            "deploy_aws_redblack"
          ],
          "source": "text",
          "stageEnabled": {
            "expression": "",
            "type": "expression"
          },
          "stageTimeoutMs": 60000,
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "continuePipeline": true,
          "failPipeline": false,
          "method": "POST",
          "name": "Notify #ops-catamorphic deploy finished",
          "overrideTimeout": true,
          "payload": {
            "channel": "#ops-catamorphic",
            "text": "${ trigger.user } is done deploying gonfalon-web - catamorphic with version ${ parameters.sha }. Check it out!"
          },
          "refId": "notification_deploy_finish_ops-catamorphic",
          "requisiteStageRefIds": [
            "deploy_aws_redblack",
            "sleuth_publish",
            "honeycomb_publish"
          ],
          "stageTimeoutMs": 60000,
          "type": "webhook",
          "url": "https://hooks.slack.com/services/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"
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "completeOtherBranchesThenFail": true,
          "continuePipeline": true,
          "credentials": "kubernetes",
          "failPipeline": false,
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "notifier",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "env": [
                        {
                          "name": "METHOD",
                          "value": "POST"
                        },
                        {
                          "name": "URL",
                          "value": "https://api.rollbar.com/api/1/deploy"
                        },
                        {
                          "name": "BODY",
                          "value": "{\n\t\t\"access_token\":   \"{{`{{ ssm \"${ parameters.rollbar_access_token_ssm_path }\" }}`}}\",\n\t\t\"environment\":    \"catamorphic\",\n\t\t\"local_username\": \"${ trigger.user }\",\n\t\t\"revision\":       \"${ parameters.sha }\",\n\t\t\"status\":         \"succeeded\"\n\t}"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "ASSUME_ROLE",
                          "value": "SpinnakerManagedRole"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "554582317989"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/notifier:latest",
                      "name": "notifier"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Publish to Rollbar (succeeded)",
          "refId": "rollbar_succeeded",
          "requisiteStageRefIds": [
            "deploy_aws_redblack"
          ],
          "source": "text",
          "stageEnabled": {
            "expression": "parameters.rollbar_access_token_ssm_path != ''",
            "type": "expression"
          },
          "stageTimeoutMs": 60000,
          "type": "runJobManifest",
          "waitForCompletion": true
        }
      ],
      "triggers": [
        {
          "enabled": true,
          "expectedArtifactIds": [],
          "payloadConstraints": {
            "status": "completed"
          },
          "runAsUser": "api-service-account@launchdarkly.com",
          "source": "027fa2a5-3e65-4aee-9a41-cd393ac8b224",
          "type": "webhook"
        },
        {
          "enabled": true,
          "expectedArtifactIds": [],
          "payloadConstraints": {
            "status": "thumbed"
          },
          "runAsUser": "api-service-account@launchdarkly.com",
          "source": "ba8a7157-4c40-43b1-984f-e3897a492c27",
          "type": "webhook"
        }
      ]
    },
    {
      "appConfig": {},
      "application": "gonfalon",
      "expectedArtifacts": [],
      "keepWaitingPipelines": false,
      "limitConcurrent": true,
      "name": "gonfalon-web - catamorphic_dr",
      "notifications": [
        {
          "address": "eng-deploys",
          "level": "pipeline",
          "type": "slack",
          "when": [
            "pipeline.failed"
          ]
        },
        {
          "address": "ops-deploy-alerts",
          "level": "pipeline",
          "type": "slack",
          "when": [
            "pipeline.failed"
          ]
        },
        {
          "address": "gonfalon-drift-email.oqd3r7nr@launchdarkly.pagerduty.com",
          "level": "pipeline",
          "type": "email",
          "when": [
            "pipeline.failed"
          ]
        }
      ],
      "parameterConfig": [
        {
          "name": "sha",
          "description": "Artifact SHA to deploy",
          "hasOptions": false,
          "label": "Artifact SHA to deploy",
          "required": true,
          "default": ""
        },
        {
          "name": "ec2_instance_type",
          "description": "EC2 instance type",
          "hasOptions": true,
          "label": "EC2 instance type",
          "required": true,
          "options": [
            {
              "value": "m5a.xlarge"
            },
            {
              "value": "m5a.2xlarge"
            }
          ],
          "default": "m5a.xlarge"
        },
        {
          "name": "base_ami_name_prefix",
          "description": "Prefix for the base AMI name",
          "hasOptions": false,
          "label": "Prefix for the base AMI name",
          "required": true,
          "default": "ld-"
        },
        {
          "name": "rollbar_access_token_ssm_path",
          "description": "Rollbar Access Token SSM Path",
          "hasOptions": false,
          "label": "",
          "required": false,
          "default": "/global/services/gonfalon/rollbar_token"
        },
        {
          "name": "sleuth_api_key_ssm_path",
          "description": "Sleuth Api Key SSM Path",
          "hasOptions": false,
          "label": "",
          "required": false,
          "default": "/global/services/sleuth/api_key"
        },
        {
          "name": "honeycomb_api_key_ssm_path",
          "description": "Honeycomb Api Key SSM Path",
          "hasOptions": false,
          "label": "",
          "required": false,
          "default": "/catamorphic/common/services/honeycomb/write_key"
        }
      ],
      "stages": [
        {
          "continuePipeline": true,
          "customHeaders": {
            "X-LD-Private": "allowed"
          },
          "failPipeline": false,
          "method": "GET",
          "name": "Determine current version",
          "overrideTimeout": true,
          "refId": "determine_deployed_app_version",
          "requisiteStageRefIds": [],
          "stageTimeoutMs": 60000,
          "type": "webhook",
          "url": "https://gonfalon-internal.dr.catamorphic.com/api/status"
        },
        {
          "continuePipeline": true,
          "failPipeline": false,
          "method": "POST",
          "name": "Notify #ops-dr deploy is happening",
          "overrideTimeout": true,
          "payload": {
            "channel": "#ops-dr",
            "text": "${ trigger.user } is really :deploying: gonfalon-web - catamorphic_dr with version ${ parameters.sha }. Follow progress at https://deploy.launchdarkly.com/#/applications/gonfalon/executions/${ execution.id } "
          },
          "refId": "notification_deploy_start_ops-dr",
          "requisiteStageRefIds": [
            "determine_deployed_app_version"
          ],
          "stageTimeoutMs": 60000,
          "type": "webhook",
          "url": "https://hooks.slack.com/services/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"
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "completeOtherBranchesThenFail": true,
          "continuePipeline": true,
          "credentials": "kubernetes",
          "failPipeline": false,
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "notifier",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "env": [
                        {
                          "name": "METHOD",
                          "value": "POST"
                        },
                        {
                          "name": "URL",
                          "value": "https://api.rollbar.com/api/1/deploy"
                        },
                        {
                          "name": "BODY",
                          "value": "{\n\t\t\"access_token\":   \"{{`{{ ssm \"${ parameters.rollbar_access_token_ssm_path }\" }}`}}\",\n\t\t\"environment\":    \"catamorphic_dr\",\n\t\t\"local_username\": \"${ trigger.user }\",\n\t\t\"revision\":       \"${ parameters.sha }\",\n\t\t\"status\":         \"started\"\n\t}"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-west-2"
                        },
                        {
                          "name": "ASSUME_ROLE",
                          "value": "SpinnakerManagedRole"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "554582317989"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/notifier:latest",
                      "name": "notifier"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Publish to Rollbar (started)",
          "refId": "rollbar_started",
          "requisiteStageRefIds": [
            "determine_deployed_app_version"
          ],
          "source": "text",
          "stageEnabled": {
            "expression": "parameters.rollbar_access_token_ssm_path != ''",
            "type": "expression"
          },
          "stageTimeoutMs": 60000,
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "cloudProvider": "aws",
          "cloudProviderType": "aws",
          "name": "Lookup AMI ID for Baked Artifact AMI",
          "overrideTimeout": true,
          "packageName": "gonfalon-web-${ parameters.sha }*ubuntu",
          "refId": "lookup_baked_artifact_ami_id",
          "regions": [
            "us-west-2"
          ],
          "requisiteStageRefIds": [
            "determine_deployed_app_version"
          ],
          "stageTimeoutMs": 60000,
          "tags": {},
          "type": "findImageFromTags"
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "save-flags-json",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "env": [
                        {
                          "name": "SDK_KEY_SSM_PARAMETER",
                          "value": "/catamorphic/common/services/launchdarkly-catamorphic/sdk_key"
                        },
                        {
                          "name": "S3_BUCKET",
                          "value": "launchdarkly-catamorphic-dr-configs"
                        },
                        {
                          "name": "S3_KEY",
                          "value": "catamorphic_dr/gonfalon/flags.json"
                        },
                        {
                          "name": "CATFOOD_URL",
                          "value": "https://app.ld.catamorphic.com"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-west-2"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "554582317989"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/save-flags-json:latest",
                      "name": "flags-json"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Save flags.json to S3 - us-west-2",
          "refId": "save_flags_json_us-west-2",
          "requisiteStageRefIds": [
            "lookup_baked_artifact_ami_id"
          ],
          "source": "text",
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "clusters": [
            {
              "account": "launchdarkly-production",
              "application": "gonfalon",
              "associatePublicIpAddress": false,
              "availabilityZones": {
                "us-west-2": [
                  "us-west-2a",
                  "us-west-2b",
                  "us-west-2c"
                ]
              },
              "base64UserData": "",
              "capacity": {
                "desired": 2,
                "max": 2,
                "min": 2
              },
              "cloudProvider": "aws",
              "cooldown": 120,
              "copySourceCustomBlockDeviceMappings": false,
              "delayBeforeDisableSec": 60,
              "delayBeforeScaleDownSec": 300,
              "dirty": {},
              "ebsOptimized": false,
              "enabledMetrics": [
                "GroupMinSize",
                "GroupMaxSize",
                "GroupDesiredCapacity",
                "GroupInServiceInstances",
                "GroupPendingInstances",
                "GroupStandbyInstances",
                "GroupTerminatingInstances",
                "GroupTotalInstances"
              ],
              "freeFormDetails": "cat-dr",
              "healthCheckGracePeriod": 240,
              "healthCheckType": "ELB",
              "iamRole": "catamorphic_dr-gonfalon",
              "instanceMonitoring": true,
              "instanceType": "${ parameters.ec2_instance_type }",
              "keyPair": "ld_shared",
              "launchTemplateOverridesForInstanceType": null,
              "loadBalancers": [],
              "maxRemainingAsgs": 2,
              "moniker": {
                "app": "gonfalon",
                "detail": "cat-dr",
                "stack": "web"
              },
              "preferSourceCapacity": true,
              "provider": "aws",
              "rollback": {
                "onFailure": true
              },
              "scaleDown": true,
              "securityGroups": [
                "sg-099f2f58a6989f648",
                "sg-0bb94ae14105a685e",
                "sg-0135fb314880b1ed2",
                "sg-02ea8f75835e43ef0",
                "sg-0f797896932ef14f2",
                "sg-0861e5b5a564ce941",
                "sg-02a0127865b74dd85"
              ],
              "setLaunchTemplate": false,
              "spelLoadBalancers": [],
              "spelTargetGroups": [],
              "spotPrice": "",
              "stack": "web",
              "strategy": "redblack",
              "subnetType": "catamorphic_dr-private-subnet",
              "suspendedProcesses": [],
              "tags": {
                "Name": "gonfalon-web (catamorphic_dr)",
                "dogfoodCanary": "false",
                "env": "catamorphic_dr",
                "environment": "catamorphic_dr",
                "managed_by": "spinnaker",
                "owner": "common",
                "region": "us-west-2",
                "role": "gonfalon-web",
                "service": "app.launchdarkly.com",
                "sha": "${ parameters.sha }",
                "tier": "dr"
              },
              "targetGroups": [
                "gonfalon-web-cat-dr",
                "gonfalon-web-internal-cat-dr"
              ],
              "targetHealthyDeployPercentage": 100,
              "terminationPolicies": [
                "Default"
              ],
              "useAmiBlockDeviceMappings": true,
              "useSourceCapacity": true
            }
          ],
          "customSubject": "Deployed gonfalon-web-${ parameters['sha'] } to catamorphic_dr",
          "name": "Deploy application to AWS",
          "notifications": [
            {
              "address": "changelog-catamorphic_dr@launchdarkly.com",
              "level": "stage",
              "message": {
                "stage.complete": {
                  "text": "Details: Deployed gonfalon-web-${ parameters['sha'] } to catamorphic_dr.  The diff is: https://github.com/launchdarkly/gonfalon/compare/${ #stage('Determine current version')['status'].toString() == 'SUCCEEDED' ? #stage('Determine current version')['context']['webhook']['body']['version'] : 'unknown' }...${ parameters['sha'] }\n\n!catamorphic_dr !deploy\n\nWho: ${ trigger['user'] } via ${ trigger['type'] } trigger\n\nTopic: gonfalon-web\n\nWhen: ${ new java.text.SimpleDateFormat('EEE MMM d HH:mm:ss z YYYY').format(new java.util.Date())}\n\n"
                }
              },
              "type": "email",
              "when": [
                "stage.complete"
              ]
            }
          ],
          "overrideTimeout": true,
          "refId": "deploy_aws_redblack",
          "requisiteStageRefIds": [
            "lookup_baked_artifact_ami_id",
            "save_flags_json_us-west-2"
          ],
          "sendNotifications": true,
          "stageTimeoutMs": 7200000,
          "type": "deploy"
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "completeOtherBranchesThenFail": true,
          "continuePipeline": true,
          "credentials": "kubernetes",
          "failPipeline": false,
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "notifier",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "env": [
                        {
                          "name": "METHOD",
                          "value": "POST"
                        },
                        {
                          "name": "URL",
                          "value": "https://app.sleuth.io/api/1/deployments/launchdarkly/gonfalon-web/register_deploy?ignore_if_duplicate=true"
                        },
                        {
                          "name": "BODY",
                          "value": ""
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-west-2"
                        },
                        {
                          "name": "FORM_api_key",
                          "value": "{{`{{ ssm \"${ parameters.sleuth_api_key_ssm_path }\" }}`}}"
                        },
                        {
                          "name": "FORM_environment",
                          "value": "catamorphic_dr"
                        },
                        {
                          "name": "FORM_sha",
                          "value": "${ parameters.sha }"
                        },
                        {
                          "name": "ASSUME_ROLE",
                          "value": "SpinnakerManagedRole"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "554582317989"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/notifier:latest",
                      "name": "notifier"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Publish to Sleuth",
          "refId": "sleuth_publish",
          "requisiteStageRefIds": [
            "deploy_aws_redblack"
          ],
          "source": "text",
          "stageEnabled": {
            "expression": "sleuth_api_key_ssm_path != ''",
            "type": "expression"
          },
          "stageTimeoutMs": 60000,
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "completeOtherBranchesThenFail": true,
          "continuePipeline": true,
          "credentials": "kubernetes",
          "failPipeline": false,
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "notifier",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "env": [
                        {
                          "name": "METHOD",
                          "value": "POST"
                        },
                        {
                          "name": "URL",
                          "value": "https://api.honeycomb.io/1/markers/managed-catamorphic"
                        },
                        {
                          "name": "BODY",
                          "value": "{\n\t\t\"message\" : \"gonfalon - catamorphic_dr - Deployment - sha: ${ parameters.sha }\",\n\t\t\"type\":\"deploy\"\n\t}"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-west-2"
                        },
                        {
                          "name": "ASSUME_ROLE",
                          "value": "SpinnakerManagedRole"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "554582317989"
                        },
                        {
                          "name": "HEADER_Accept",
                          "value": "application/json"
                        },
                        {
                          "name": "HEADER_Content_Type",
                          "value": "application/json"
                        },
                        {
                          "name": "HEADER_X_Honeycomb_Team",
                          "value": "{{`{{ ssm \"${ parameters.honeycomb_api_key_ssm_path }\" }}`}}"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/notifier:latest",
                      "name": "notifier"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Publish to Honeycomb",
          "refId": "honeycomb_publish",
          "requisiteStageRefIds": [
            "deploy_aws_redblack"
          ],
          "source": "text",
          "stageEnabled": {
            "expression": "honeycomb_api_key_ssm_path != ''",
            "type": "expression"
          },
          "stageTimeoutMs": 60000,
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "continuePipeline": true,
          "failPipeline": false,
          "method": "POST",
          "name": "Notify #ops-dr deploy finished",
          "overrideTimeout": true,
          "payload": {
            "channel": "#ops-dr",
            "text": "${ trigger.user } is done deploying gonfalon-web - catamorphic_dr with version ${ parameters.sha }. Check it out!"
          },
          "refId": "notification_deploy_finish_ops-dr",
          "requisiteStageRefIds": [
            "deploy_aws_redblack",
            "sleuth_publish",
            "honeycomb_publish"
          ],
          "stageTimeoutMs": 60000,
          "type": "webhook",
          "url": "https://hooks.slack.com/services/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"
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "completeOtherBranchesThenFail": true,
          "continuePipeline": true,
          "credentials": "kubernetes",
          "failPipeline": false,
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "notifier",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "env": [
                        {
                          "name": "METHOD",
                          "value": "POST"
                        },
                        {
                          "name": "URL",
                          "value": "https://api.rollbar.com/api/1/deploy"
                        },
                        {
                          "name": "BODY",
                          "value": "{\n\t\t\"access_token\":   \"{{`{{ ssm \"${ parameters.rollbar_access_token_ssm_path }\" }}`}}\",\n\t\t\"environment\":    \"catamorphic_dr\",\n\t\t\"local_username\": \"${ trigger.user }\",\n\t\t\"revision\":       \"${ parameters.sha }\",\n\t\t\"status\":         \"succeeded\"\n\t}"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-west-2"
                        },
                        {
                          "name": "ASSUME_ROLE",
                          "value": "SpinnakerManagedRole"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "554582317989"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/notifier:latest",
                      "name": "notifier"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Publish to Rollbar (succeeded)",
          "refId": "rollbar_succeeded",
          "requisiteStageRefIds": [
            "deploy_aws_redblack"
          ],
          "source": "text",
          "stageEnabled": {
            "expression": "parameters.rollbar_access_token_ssm_path != ''",
            "type": "expression"
          },
          "stageTimeoutMs": 60000,
          "type": "runJobManifest",
          "waitForCompletion": true
        }
      ],
      "triggers": null
    },
    {
      "appConfig": {},
      "application": "gonfalon",
      "expectedArtifacts": [],
      "keepWaitingPipelines": false,
      "limitConcurrent": true,
      "name": "gonfalon-web - dr",
      "notifications": [
        {
          "address": "eng-deploys",
          "level": "pipeline",
          "type": "slack",
          "when": [
            "pipeline.failed"
          ]
        },
        {
          "address": "ops-deploy-alerts",
          "level": "pipeline",
          "type": "slack",
          "when": [
            "pipeline.failed"
          ]
        },
        {
          "address": "gonfalon-drift-email.oqd3r7nr@launchdarkly.pagerduty.com",
          "level": "pipeline",
          "type": "email",
          "when": [
            "pipeline.failed"
          ]
        }
      ],
      "parameterConfig": [
        {
          "name": "sha",
          "description": "Artifact SHA to deploy",
          "hasOptions": false,
          "label": "Artifact SHA to deploy",
          "required": true,
          "default": ""
        },
        {
          "name": "ec2_instance_type",
          "description": "EC2 instance type",
          "hasOptions": true,
          "label": "EC2 instance type",
          "required": true,
          "options": [
            {
              "value": "m5a.xlarge"
            },
            {
              "value": "m5a.2xlarge"
            }
          ],
          "default": "m5a.xlarge"
        },
        {
          "name": "base_ami_name_prefix",
          "description": "Prefix for the base AMI name",
          "hasOptions": false,
          "label": "Prefix for the base AMI name",
          "required": true,
          "default": "ld-"
        },
        {
          "name": "rollbar_access_token_ssm_path",
          "description": "Rollbar Access Token SSM Path",
          "hasOptions": false,
          "label": "",
          "required": false,
          "default": "/global/services/gonfalon/rollbar_token"
        },
        {
          "name": "sleuth_api_key_ssm_path",
          "description": "Sleuth Api Key SSM Path",
          "hasOptions": false,
          "label": "",
          "required": false,
          "default": "/global/services/sleuth/api_key"
        },
        {
          "name": "honeycomb_api_key_ssm_path",
          "description": "Honeycomb Api Key SSM Path",
          "hasOptions": false,
          "label": "",
          "required": false,
          "default": "/production/common/services/honeycomb/write_key"
        }
      ],
      "stages": [
        {
          "continuePipeline": true,
          "customHeaders": {
            "X-LD-Private": "allowed"
          },
          "failPipeline": false,
          "method": "GET",
          "name": "Determine current version",
          "overrideTimeout": true,
          "refId": "determine_deployed_app_version",
          "requisiteStageRefIds": [],
          "stageTimeoutMs": 60000,
          "type": "webhook",
          "url": "https://gonfalon-internal.dr.launchdarkly.com/api/status"
        },
        {
          "continuePipeline": true,
          "failPipeline": false,
          "method": "POST",
          "name": "Notify #ops-dr deploy is happening",
          "overrideTimeout": true,
          "payload": {
            "channel": "#ops-dr",
            "text": "${ trigger.user } is really :deploying: gonfalon-web - dr with version ${ parameters.sha }. Follow progress at https://deploy.launchdarkly.com/#/applications/gonfalon/executions/${ execution.id } "
          },
          "refId": "notification_deploy_start_ops-dr",
          "requisiteStageRefIds": [
            "determine_deployed_app_version"
          ],
          "stageTimeoutMs": 60000,
          "type": "webhook",
          "url": "https://hooks.slack.com/services/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"
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "completeOtherBranchesThenFail": true,
          "continuePipeline": true,
          "credentials": "kubernetes",
          "failPipeline": false,
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "notifier",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "env": [
                        {
                          "name": "METHOD",
                          "value": "POST"
                        },
                        {
                          "name": "URL",
                          "value": "https://api.rollbar.com/api/1/deploy"
                        },
                        {
                          "name": "BODY",
                          "value": "{\n\t\t\"access_token\":   \"{{`{{ ssm \"${ parameters.rollbar_access_token_ssm_path }\" }}`}}\",\n\t\t\"environment\":    \"dr\",\n\t\t\"local_username\": \"${ trigger.user }\",\n\t\t\"revision\":       \"${ parameters.sha }\",\n\t\t\"status\":         \"started\"\n\t}"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-west-2"
                        },
                        {
                          "name": "ASSUME_ROLE",
                          "value": "SpinnakerManagedRole"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "554582317989"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/notifier:latest",
                      "name": "notifier"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Publish to Rollbar (started)",
          "refId": "rollbar_started",
          "requisiteStageRefIds": [
            "determine_deployed_app_version"
          ],
          "source": "text",
          "stageEnabled": {
            "expression": "parameters.rollbar_access_token_ssm_path != ''",
            "type": "expression"
          },
          "stageTimeoutMs": 60000,
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "cloudProvider": "aws",
          "cloudProviderType": "aws",
          "name": "Lookup AMI ID for Baked Artifact AMI",
          "overrideTimeout": true,
          "packageName": "gonfalon-web-${ parameters.sha }*ubuntu",
          "refId": "lookup_baked_artifact_ami_id",
          "regions": [
            "us-west-2"
          ],
          "requisiteStageRefIds": [
            "determine_deployed_app_version"
          ],
          "stageTimeoutMs": 60000,
          "tags": {},
          "type": "findImageFromTags"
        },
        {
          "clusters": [
            {
              "account": "launchdarkly-production",
              "application": "gonfalon",
              "associatePublicIpAddress": false,
              "availabilityZones": {
                "us-west-2": [
                  "us-west-2a",
                  "us-west-2b",
                  "us-west-2c"
                ]
              },
              "base64UserData": "",
              "capacity": {
                "desired": 2,
                "max": 2,
                "min": 2
              },
              "cloudProvider": "aws",
              "cooldown": 120,
              "copySourceCustomBlockDeviceMappings": false,
              "delayBeforeDisableSec": 60,
              "delayBeforeScaleDownSec": 300,
              "dirty": {},
              "ebsOptimized": false,
              "enabledMetrics": [
                "GroupMinSize",
                "GroupMaxSize",
                "GroupDesiredCapacity",
                "GroupInServiceInstances",
                "GroupPendingInstances",
                "GroupStandbyInstances",
                "GroupTerminatingInstances",
                "GroupTotalInstances"
              ],
              "freeFormDetails": "dr",
              "healthCheckGracePeriod": 240,
              "healthCheckType": "ELB",
              "iamRole": "dr-gonfalon",
              "instanceMonitoring": true,
              "instanceType": "${ parameters.ec2_instance_type }",
              "keyPair": "ld_shared",
              "launchTemplateOverridesForInstanceType": null,
              "loadBalancers": [],
              "maxRemainingAsgs": 2,
              "moniker": {
                "app": "gonfalon",
                "detail": "dr",
                "stack": "web"
              },
              "preferSourceCapacity": true,
              "provider": "aws",
              "rollback": {
                "onFailure": true
              },
              "scaleDown": true,
              "securityGroups": [
                "sg-06515fdccb31b3403",
                "sg-0b9a28ae566533143",
                "sg-0b4413a5801bdc224",
                "sg-00f1cc0b98c42ddf2",
                "sg-0119b6928126f52e4",
                "sg-0e8a34903e0e72f7a",
                "sg-0e82ca621b91bd7ce"
              ],
              "setLaunchTemplate": false,
              "spelLoadBalancers": [],
              "spelTargetGroups": [],
              "spotPrice": "",
              "stack": "web",
              "strategy": "redblack",
              "subnetType": "dr-private-subnet",
              "suspendedProcesses": [],
              "tags": {
                "Name": "gonfalon-web (dr)",
                "dogfoodCanary": "false",
                "env": "dr",
                "environment": "dr",
                "managed_by": "spinnaker",
                "owner": "common",
                "region": "us-west-2",
                "role": "gonfalon-web",
                "service": "app.launchdarkly.com",
                "sha": "${ parameters.sha }",
                "tier": "dr"
              },
              "targetGroups": [
                "gonfalon-web-dr",
                "gonfalon-web-internal-dr"
              ],
              "targetHealthyDeployPercentage": 100,
              "terminationPolicies": [
                "Default"
              ],
              "useAmiBlockDeviceMappings": true,
              "useSourceCapacity": true
            }
          ],
          "customSubject": "Deployed gonfalon-web-${ parameters['sha'] } to dr",
          "name": "Deploy application to AWS",
          "notifications": [
            {
              "address": "changelog-dr@launchdarkly.com",
              "level": "stage",
              "message": {
                "stage.complete": {
                  "text": "Details: Deployed gonfalon-web-${ parameters['sha'] } to dr.  The diff is: https://github.com/launchdarkly/gonfalon/compare/${ #stage('Determine current version')['status'].toString() == 'SUCCEEDED' ? #stage('Determine current version')['context']['webhook']['body']['version'] : 'unknown' }...${ parameters['sha'] }\n\n!dr !deploy\n\nWho: ${ trigger['user'] } via ${ trigger['type'] } trigger\n\nTopic: gonfalon-web\n\nWhen: ${ new java.text.SimpleDateFormat('EEE MMM d HH:mm:ss z YYYY').format(new java.util.Date())}\n\n"
                }
              },
              "type": "email",
              "when": [
                "stage.complete"
              ]
            }
          ],
          "overrideTimeout": true,
          "refId": "deploy_aws_redblack",
          "requisiteStageRefIds": [
            "lookup_baked_artifact_ami_id"
          ],
          "sendNotifications": true,
          "stageTimeoutMs": 7200000,
          "type": "deploy"
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "completeOtherBranchesThenFail": true,
          "continuePipeline": true,
          "credentials": "kubernetes",
          "failPipeline": false,
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "notifier",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "env": [
                        {
                          "name": "METHOD",
                          "value": "POST"
                        },
                        {
                          "name": "URL",
                          "value": "https://app.sleuth.io/api/1/deployments/launchdarkly/gonfalon-web/register_deploy?ignore_if_duplicate=true"
                        },
                        {
                          "name": "BODY",
                          "value": ""
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-west-2"
                        },
                        {
                          "name": "FORM_api_key",
                          "value": "{{`{{ ssm \"${ parameters.sleuth_api_key_ssm_path }\" }}`}}"
                        },
                        {
                          "name": "FORM_environment",
                          "value": "dr"
                        },
                        {
                          "name": "FORM_sha",
                          "value": "${ parameters.sha }"
                        },
                        {
                          "name": "ASSUME_ROLE",
                          "value": "SpinnakerManagedRole"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "554582317989"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/notifier:latest",
                      "name": "notifier"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Publish to Sleuth",
          "refId": "sleuth_publish",
          "requisiteStageRefIds": [
            "deploy_aws_redblack"
          ],
          "source": "text",
          "stageEnabled": {
            "expression": "sleuth_api_key_ssm_path != ''",
            "type": "expression"
          },
          "stageTimeoutMs": 60000,
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "completeOtherBranchesThenFail": true,
          "continuePipeline": true,
          "credentials": "kubernetes",
          "failPipeline": false,
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "notifier",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "env": [
                        {
                          "name": "METHOD",
                          "value": "POST"
                        },
                        {
                          "name": "URL",
                          "value": "https://api.honeycomb.io/1/markers/production"
                        },
                        {
                          "name": "BODY",
                          "value": "{\n\t\t\"message\" : \"gonfalon - dr - Deployment - sha: ${ parameters.sha }\",\n\t\t\"type\":\"deploy\"\n\t}"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-west-2"
                        },
                        {
                          "name": "ASSUME_ROLE",
                          "value": "SpinnakerManagedRole"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "554582317989"
                        },
                        {
                          "name": "HEADER_Accept",
                          "value": "application/json"
                        },
                        {
                          "name": "HEADER_Content_Type",
                          "value": "application/json"
                        },
                        {
                          "name": "HEADER_X_Honeycomb_Team",
                          "value": "{{`{{ ssm \"${ parameters.honeycomb_api_key_ssm_path }\" }}`}}"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/notifier:latest",
                      "name": "notifier"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Publish to Honeycomb",
          "refId": "honeycomb_publish",
          "requisiteStageRefIds": [
            "deploy_aws_redblack"
          ],
          "source": "text",
          "stageEnabled": {
            "expression": "honeycomb_api_key_ssm_path != ''",
            "type": "expression"
          },
          "stageTimeoutMs": 60000,
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "continuePipeline": true,
          "failPipeline": false,
          "method": "POST",
          "name": "Notify #ops-dr deploy finished",
          "overrideTimeout": true,
          "payload": {
            "channel": "#ops-dr",
            "text": "${ trigger.user } is done deploying gonfalon-web - dr with version ${ parameters.sha }. Check it out!"
          },
          "refId": "notification_deploy_finish_ops-dr",
          "requisiteStageRefIds": [
            "deploy_aws_redblack",
            "sleuth_publish",
            "honeycomb_publish"
          ],
          "stageTimeoutMs": 60000,
          "type": "webhook",
          "url": "https://hooks.slack.com/services/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"
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "completeOtherBranchesThenFail": true,
          "continuePipeline": true,
          "credentials": "kubernetes",
          "failPipeline": false,
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "notifier",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "env": [
                        {
                          "name": "METHOD",
                          "value": "POST"
                        },
                        {
                          "name": "URL",
                          "value": "https://api.rollbar.com/api/1/deploy"
                        },
                        {
                          "name": "BODY",
                          "value": "{\n\t\t\"access_token\":   \"{{`{{ ssm \"${ parameters.rollbar_access_token_ssm_path }\" }}`}}\",\n\t\t\"environment\":    \"dr\",\n\t\t\"local_username\": \"${ trigger.user }\",\n\t\t\"revision\":       \"${ parameters.sha }\",\n\t\t\"status\":         \"succeeded\"\n\t}"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-west-2"
                        },
                        {
                          "name": "ASSUME_ROLE",
                          "value": "SpinnakerManagedRole"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "554582317989"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/notifier:latest",
                      "name": "notifier"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Publish to Rollbar (succeeded)",
          "refId": "rollbar_succeeded",
          "requisiteStageRefIds": [
            "deploy_aws_redblack"
          ],
          "source": "text",
          "stageEnabled": {
            "expression": "parameters.rollbar_access_token_ssm_path != ''",
            "type": "expression"
          },
          "stageTimeoutMs": 60000,
          "type": "runJobManifest",
          "waitForCompletion": true
        }
      ],
      "triggers": null
    },
    {
      "appConfig": {},
      "application": "gonfalon",
      "expectedArtifacts": [],
      "keepWaitingPipelines": false,
      "limitConcurrent": true,
      "name": "gonfalon-web - intuit_production",
      "notifications": [
        {
          "address": "eng-deploys",
          "level": "pipeline",
          "type": "slack",
          "when": [
            "pipeline.failed"
          ]
        },
        {
          "address": "ops-deploy-alerts",
          "level": "pipeline",
          "type": "slack",
          "when": [
            "pipeline.failed"
          ]
        },
        {
          "address": "gonfalon-drift-email.oqd3r7nr@launchdarkly.pagerduty.com",
          "level": "pipeline",
          "type": "email",
          "when": [
            "pipeline.failed"
          ]
        }
      ],
      "parameterConfig": [
        {
          "name": "sha",
          "description": "Artifact SHA to deploy",
          "hasOptions": false,
          "label": "Artifact SHA to deploy",
          "required": true,
          "default": ""
        },
        {
          "name": "ec2_instance_type",
          "description": "EC2 instance type",
          "hasOptions": true,
          "label": "EC2 instance type",
          "required": true,
          "options": [
            {
              "value": "m5a.xlarge"
            },
            {
              "value": "m5a.2xlarge"
            }
          ],
          "default": "m5a.xlarge"
        },
        {
          "name": "base_ami_name_prefix",
          "description": "Prefix for the base AMI name",
          "hasOptions": false,
          "label": "Prefix for the base AMI name",
          "required": true,
          "default": "ld-"
        },
        {
          "name": "rollbar_access_token_ssm_path",
          "description": "Rollbar Access Token SSM Path",
          "hasOptions": false,
          "label": "",
          "required": false,
          "default": "/global/services/gonfalon/rollbar_token"
        },
        {
          "name": "sleuth_api_key_ssm_path",
          "description": "Sleuth Api Key SSM Path",
          "hasOptions": false,
          "label": "",
          "required": false,
          "default": "/global/services/sleuth/api_key"
        },
        {
          "name": "honeycomb_api_key_ssm_path",
          "description": "Honeycomb Api Key SSM Path",
          "hasOptions": false,
          "label": "",
          "required": false,
          "default": "/production/common/services/honeycomb/write_key"
        }
      ],
      "stages": [
        {
          "continuePipeline": true,
          "customHeaders": {
            "X-LD-Private": "allowed"
          },
          "failPipeline": false,
          "method": "GET",
          "name": "Determine current version",
          "overrideTimeout": true,
          "refId": "determine_deployed_app_version",
          "requisiteStageRefIds": [],
          "stageTimeoutMs": 60000,
          "type": "webhook",
          "url": "https://gonfalon-internal.prod.intuit.launchdarkly.com/api/status"
        },
        {
          "method": "POST",
          "name": "Seek #intuit deploy approval",
          "overrideTimeout": true,
          "payload": {
            "channel": "#intuit",
            "text": "${ trigger.user } wants to :deploying: gonfalon-web - intuit_production with version ${ parameters['sha'] }.\nSHA diff is: https://github.com/launchdarkly/gonfalon/compare/${ #stage('Determine current version')['status'].toString() == 'SUCCEEDED' ? #stage('Determine current version')['context']['webhook']['body']['version'] : 'unknown' }...${ parameters['sha'] } | See https://deploy.launchdarkly.com/#/applications/gonfalon/executions/${ execution.id } for more information.\n\n:thumbsup: / :thumbsdown:?"
          },
          "refId": "notification_deploy_waiting_for_approval_intuit",
          "requisiteStageRefIds": [
            "determine_deployed_app_version"
          ],
          "stageEnabled": {
            "expression": "!(trigger['payload'] != null \u0026\u0026 trigger['payload']['status'] == 'thumbed')",
            "type": "expression"
          },
          "stageTimeoutMs": 60000,
          "type": "webhook",
          "url": "https://hooks.slack.com/services/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"
        },
        {
          "failPipeline": true,
          "instructions": "Deploying gonfalon-web - intuit_production with version ${ parameters['sha'] }. The diff is: https://github.com/launchdarkly/gonfalon/compare/${ #stage('Determine current version')['status'].toString() == 'SUCCEEDED' ? #stage('Determine current version')['context']['webhook']['body']['version'] : 'unknown' }...${ parameters['sha'] }",
          "judgmentInputs": [],
          "name": "Confirm that deploy should continue",
          "notifications": [
            {
              "address": "deploys",
              "level": "stage",
              "type": "slack",
              "when": [
                "manualJudgment",
                "manualJudgmentContinue",
                "manualJudgmentStop"
              ]
            }
          ],
          "overrideTimeout": true,
          "refId": "confirm_deployment",
          "requisiteStageRefIds": [
            "notification_deploy_waiting_for_approval_intuit"
          ],
          "sendNotifications": true,
          "stageEnabled": {
            "expression": "!(trigger['payload'] != null \u0026\u0026 trigger['payload']['status'] == 'thumbed')",
            "type": "expression"
          },
          "stageTimeoutMs": 3600000,
          "type": "manualJudgment"
        },
        {
          "continuePipeline": true,
          "failPipeline": false,
          "method": "POST",
          "name": "Notify #intuit deploy is happening",
          "overrideTimeout": true,
          "payload": {
            "channel": "#intuit",
            "text": "${ trigger.user } is really :deploying: gonfalon-web - intuit_production with version ${ parameters.sha }. Follow progress at https://deploy.launchdarkly.com/#/applications/gonfalon/executions/${ execution.id } "
          },
          "refId": "notification_deploy_start_intuit",
          "requisiteStageRefIds": [
            "confirm_deployment"
          ],
          "stageTimeoutMs": 60000,
          "type": "webhook",
          "url": "https://hooks.slack.com/services/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"
        },
        {
          "continuePipeline": true,
          "failPipeline": false,
          "method": "POST",
          "name": "Notify #ops-intuit deploy is happening",
          "overrideTimeout": true,
          "payload": {
            "channel": "#ops-intuit",
            "text": "${ trigger.user } is really :deploying: gonfalon-web - intuit_production with version ${ parameters.sha }. Follow progress at https://deploy.launchdarkly.com/#/applications/gonfalon/executions/${ execution.id } "
          },
          "refId": "notification_deploy_start_ops-intuit",
          "requisiteStageRefIds": [
            "confirm_deployment"
          ],
          "stageTimeoutMs": 60000,
          "type": "webhook",
          "url": "https://hooks.slack.com/services/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"
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "completeOtherBranchesThenFail": true,
          "continuePipeline": true,
          "credentials": "kubernetes",
          "failPipeline": false,
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "notifier",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "env": [
                        {
                          "name": "METHOD",
                          "value": "POST"
                        },
                        {
                          "name": "URL",
                          "value": "https://api.rollbar.com/api/1/deploy"
                        },
                        {
                          "name": "BODY",
                          "value": "{\n\t\t\"access_token\":   \"{{`{{ ssm \"${ parameters.rollbar_access_token_ssm_path }\" }}`}}\",\n\t\t\"environment\":    \"intuit_production\",\n\t\t\"local_username\": \"${ trigger.user }\",\n\t\t\"revision\":       \"${ parameters.sha }\",\n\t\t\"status\":         \"started\"\n\t}"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-west-2"
                        },
                        {
                          "name": "ASSUME_ROLE",
                          "value": "SpinnakerManagedRole"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "527291094460"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/notifier:latest",
                      "name": "notifier"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Publish to Rollbar (started)",
          "refId": "rollbar_started",
          "requisiteStageRefIds": [
            "confirm_deployment"
          ],
          "source": "text",
          "stageEnabled": {
            "expression": "parameters.rollbar_access_token_ssm_path != ''",
            "type": "expression"
          },
          "stageTimeoutMs": 60000,
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "cloudProvider": "aws",
          "cloudProviderType": "aws",
          "name": "Lookup AMI ID for Baked Artifact AMI",
          "overrideTimeout": true,
          "packageName": "gonfalon-web-${ parameters.sha }*ubuntu",
          "refId": "lookup_baked_artifact_ami_id",
          "regions": [
            "us-west-2"
          ],
          "requisiteStageRefIds": [
            "determine_deployed_app_version",
            "notification_deploy_waiting_for_approval_intuit",
            "confirm_deployment"
          ],
          "stageTimeoutMs": 60000,
          "tags": {},
          "type": "findImageFromTags"
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "run-db-migrations-coderefs-crdb",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "command": [
                        "/bin/run-migrations"
                      ],
                      "env": [
                        {
                          "name": "SHA",
                          "value": "${ parameters['sha'] }"
                        },
                        {
                          "name": "DATABASE",
                          "value": "coderefs-crdb"
                        },
                        {
                          "name": "ENV_SHORT_NAME",
                          "value": "intuit_production"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-west-2"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "527291094460"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/mild:latest",
                      "name": "run-migrations"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Run DB migrations for coderefs-crdb",
          "refId": "run_db_migrations_coderefs-crdb",
          "requisiteStageRefIds": [
            "lookup_baked_artifact_ami_id"
          ],
          "source": "text",
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "run-db-migrations-oauth2-crdb",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "command": [
                        "/bin/run-migrations"
                      ],
                      "env": [
                        {
                          "name": "SHA",
                          "value": "${ parameters['sha'] }"
                        },
                        {
                          "name": "DATABASE",
                          "value": "oauth2-crdb"
                        },
                        {
                          "name": "ENV_SHORT_NAME",
                          "value": "intuit_production"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-west-2"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "527291094460"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/mild:latest",
                      "name": "run-migrations"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Run DB migrations for oauth2-crdb",
          "refId": "run_db_migrations_oauth2-crdb",
          "requisiteStageRefIds": [
            "lookup_baked_artifact_ami_id"
          ],
          "source": "text",
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "run-db-migrations-accounts-crdb",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "command": [
                        "/bin/run-migrations"
                      ],
                      "env": [
                        {
                          "name": "SHA",
                          "value": "${ parameters['sha'] }"
                        },
                        {
                          "name": "DATABASE",
                          "value": "accounts-crdb"
                        },
                        {
                          "name": "ENV_SHORT_NAME",
                          "value": "intuit_production"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-west-2"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "527291094460"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/mild:latest",
                      "name": "run-migrations"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Run DB migrations for accounts-crdb",
          "refId": "run_db_migrations_accounts-crdb",
          "requisiteStageRefIds": [
            "lookup_baked_artifact_ami_id"
          ],
          "source": "text",
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "run-db-migrations-gonfalon-accounts-crdb",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "command": [
                        "/bin/run-migrations"
                      ],
                      "env": [
                        {
                          "name": "SHA",
                          "value": "${ parameters['sha'] }"
                        },
                        {
                          "name": "DATABASE",
                          "value": "gonfalon-accounts-crdb"
                        },
                        {
                          "name": "ENV_SHORT_NAME",
                          "value": "intuit_production"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-west-2"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "527291094460"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/mild:latest",
                      "name": "run-migrations"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Run DB migrations for gonfalon-accounts-crdb",
          "refId": "run_db_migrations_gonfalon-accounts-crdb",
          "requisiteStageRefIds": [
            "lookup_baked_artifact_ami_id"
          ],
          "source": "text",
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "run-db-migrations-gonfalon-billing-crdb",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "command": [
                        "/bin/run-migrations"
                      ],
                      "env": [
                        {
                          "name": "SHA",
                          "value": "${ parameters['sha'] }"
                        },
                        {
                          "name": "DATABASE",
                          "value": "gonfalon-billing-crdb"
                        },
                        {
                          "name": "ENV_SHORT_NAME",
                          "value": "intuit_production"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-west-2"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "527291094460"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/mild:latest",
                      "name": "run-migrations"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Run DB migrations for gonfalon-billing-crdb",
          "refId": "run_db_migrations_gonfalon-billing-crdb",
          "requisiteStageRefIds": [
            "lookup_baked_artifact_ami_id"
          ],
          "source": "text",
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "run-db-migrations-gonfalon-integrations-crdb",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "command": [
                        "/bin/run-migrations"
                      ],
                      "env": [
                        {
                          "name": "SHA",
                          "value": "${ parameters['sha'] }"
                        },
                        {
                          "name": "DATABASE",
                          "value": "gonfalon-integrations-crdb"
                        },
                        {
                          "name": "ENV_SHORT_NAME",
                          "value": "intuit_production"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-west-2"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "527291094460"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/mild:latest",
                      "name": "run-migrations"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Run DB migrations for gonfalon-integrations-crdb",
          "refId": "run_db_migrations_gonfalon-integrations-crdb",
          "requisiteStageRefIds": [
            "lookup_baked_artifact_ami_id"
          ],
          "source": "text",
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "run-db-migrations-gonfalon-workflows-crdb",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "command": [
                        "/bin/run-migrations"
                      ],
                      "env": [
                        {
                          "name": "SHA",
                          "value": "${ parameters['sha'] }"
                        },
                        {
                          "name": "DATABASE",
                          "value": "gonfalon-workflows-crdb"
                        },
                        {
                          "name": "ENV_SHORT_NAME",
                          "value": "intuit_production"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-west-2"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "527291094460"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/mild:latest",
                      "name": "run-migrations"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Run DB migrations for gonfalon-workflows-crdb",
          "refId": "run_db_migrations_gonfalon-workflows-crdb",
          "requisiteStageRefIds": [
            "lookup_baked_artifact_ami_id"
          ],
          "source": "text",
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "clusters": [
            {
              "account": "intuit-production",
              "application": "gonfalon",
              "associatePublicIpAddress": false,
              "availabilityZones": {
                "us-west-2": [
                  "us-west-2a",
                  "us-west-2b",
                  "us-west-2c"
                ]
              },
              "base64UserData": "",
              "capacity": {
                "desired": 2,
                "max": 2,
                "min": 2
              },
              "cloudProvider": "aws",
              "cooldown": 120,
              "copySourceCustomBlockDeviceMappings": false,
              "delayBeforeDisableSec": 60,
              "delayBeforeScaleDownSec": 1800,
              "dirty": {},
              "ebsOptimized": false,
              "enabledMetrics": [
                "GroupMinSize",
                "GroupMaxSize",
                "GroupDesiredCapacity",
                "GroupInServiceInstances",
                "GroupPendingInstances",
                "GroupStandbyInstances",
                "GroupTerminatingInstances",
                "GroupTotalInstances"
              ],
              "freeFormDetails": "int-prd",
              "healthCheckGracePeriod": 240,
              "healthCheckType": "ELB",
              "iamRole": "intuit_production-gonfalon",
              "instanceMonitoring": true,
              "instanceType": "${ parameters.ec2_instance_type }",
              "keyPair": "ld_shared",
              "launchTemplateOverridesForInstanceType": null,
              "loadBalancers": [],
              "maxRemainingAsgs": 2,
              "moniker": {
                "app": "gonfalon",
                "detail": "int-prd",
                "stack": "web"
              },
              "preferSourceCapacity": true,
              "provider": "aws",
              "rollback": {
                "onFailure": true
              },
              "scaleDown": true,
              "securityGroups": [
                "sg-af99f0d0",
                "sg-3f1f8d45",
                "sg-b30261c3",
                "sg-07c3c9da1900da928",
                "sg-22f66e58",
                "sg-2630ae5c",
                "sg-21f36b5b",
                "sg-0f7b85f2e582250a5",
                "sg-01f54be78932eda9f",
                "sg-08c617a04f46224a0",
                "sg-04b276c4262b8143b",
                "sg-0a9bcc49dfe8ec3a0"
              ],
              "setLaunchTemplate": false,
              "spelLoadBalancers": [],
              "spelTargetGroups": [],
              "spotPrice": "",
              "stack": "web",
              "strategy": "redblack",
              "subnetType": "production-private-subnet",
              "suspendedProcesses": [],
              "tags": {
                "Name": "gonfalon-web (intuit_production)",
                "dogfoodCanary": "false",
                "env": "intuit_production",
                "environment": "intuit_production",
                "managed_by": "spinnaker",
                "owner": "common",
                "region": "us-west-2",
                "role": "gonfalon-web",
                "service": "app.launchdarkly.com",
                "sha": "${ parameters.sha }",
                "tier": "production"
              },
              "targetGroups": [
                "gonfalon-web-int-prd",
                "gonfalon-web-internal-int-prd"
              ],
              "targetHealthyDeployPercentage": 100,
              "terminationPolicies": [
                "Default"
              ],
              "useAmiBlockDeviceMappings": true,
              "useSourceCapacity": true
            },
            {
              "account": "intuit-production",
              "application": "gonfalon",
              "associatePublicIpAddress": false,
              "availabilityZones": {
                "us-west-2": [
                  "us-west-2a"
                ]
              },
              "base64UserData": "",
              "capacity": {
                "desired": 1,
                "max": 1,
                "min": 1
              },
              "cloudProvider": "aws",
              "cooldown": 120,
              "copySourceCustomBlockDeviceMappings": false,
              "delayBeforeDisableSec": 60,
              "delayBeforeScaleDownSec": 1800,
              "dirty": {},
              "ebsOptimized": false,
              "enabledMetrics": [
                "GroupMinSize",
                "GroupMaxSize",
                "GroupDesiredCapacity",
                "GroupInServiceInstances",
                "GroupPendingInstances",
                "GroupStandbyInstances",
                "GroupTerminatingInstances",
                "GroupTotalInstances"
              ],
              "freeFormDetails": "int-prd-dogfood-canary",
              "healthCheckGracePeriod": 240,
              "healthCheckType": "ELB",
              "iamRole": "intuit_production-gonfalon",
              "instanceMonitoring": true,
              "instanceType": "${ parameters.ec2_instance_type }",
              "keyPair": "ld_shared",
              "launchTemplateOverridesForInstanceType": null,
              "loadBalancers": [],
              "maxRemainingAsgs": 2,
              "moniker": {
                "app": "gonfalon",
                "detail": "int-prd",
                "stack": "web"
              },
              "preferSourceCapacity": true,
              "provider": "aws",
              "rollback": {
                "onFailure": true
              },
              "scaleDown": true,
              "securityGroups": [
                "sg-af99f0d0",
                "sg-3f1f8d45",
                "sg-b30261c3",
                "sg-07c3c9da1900da928",
                "sg-22f66e58",
                "sg-2630ae5c",
                "sg-21f36b5b",
                "sg-0f7b85f2e582250a5",
                "sg-01f54be78932eda9f",
                "sg-08c617a04f46224a0",
                "sg-04b276c4262b8143b",
                "sg-0a9bcc49dfe8ec3a0"
              ],
              "setLaunchTemplate": false,
              "spelLoadBalancers": [],
              "spelTargetGroups": [],
              "spotPrice": "",
              "stack": "web",
              "strategy": "redblack",
              "subnetType": "production-private-subnet",
              "suspendedProcesses": [],
              "tags": {
                "Name": "gonfalon-web (intuit_production)",
                "dogfoodCanary": "true",
                "env": "intuit_production",
                "environment": "intuit_production",
                "managed_by": "spinnaker",
                "owner": "common",
                "region": "us-west-2",
                "role": "gonfalon-web",
                "service": "app.launchdarkly.com",
                "sha": "${ parameters.sha }",
                "tier": "production"
              },
              "targetGroups": [
                "gonfalon-web-int-prd",
                "gonfalon-web-internal-int-prd"
              ],
              "targetHealthyDeployPercentage": 100,
              "terminationPolicies": [
                "Default"
              ],
              "useAmiBlockDeviceMappings": true,
              "useSourceCapacity": true
            }
          ],
          "customSubject": "Deployed gonfalon-web-${ parameters['sha'] } to intuit_production",
          "name": "Deploy application to AWS",
          "notifications": [
            {
              "address": "changelog-intuit_production@launchdarkly.com",
              "level": "stage",
              "message": {
                "stage.complete": {
                  "text": "Details: Deployed gonfalon-web-${ parameters['sha'] } to intuit_production.  The diff is: https://github.com/launchdarkly/gonfalon/compare/${ #stage('Determine current version')['status'].toString() == 'SUCCEEDED' ? #stage('Determine current version')['context']['webhook']['body']['version'] : 'unknown' }...${ parameters['sha'] }\n\n!intuit_production !deploy\n\nWho: ${ trigger['user'] } via ${ trigger['type'] } trigger\n\nTopic: gonfalon-web\n\nWhen: ${ new java.text.SimpleDateFormat('EEE MMM d HH:mm:ss z YYYY').format(new java.util.Date())}\n\n"
                }
              },
              "type": "email",
              "when": [
                "stage.complete"
              ]
            }
          ],
          "overrideTimeout": true,
          "refId": "deploy_aws_redblack",
          "requisiteStageRefIds": [
            "lookup_baked_artifact_ami_id",
            "run_db_migrations_coderefs-crdb",
            "run_db_migrations_oauth2-crdb",
            "run_db_migrations_accounts-crdb",
            "run_db_migrations_gonfalon-accounts-crdb",
            "run_db_migrations_gonfalon-billing-crdb",
            "run_db_migrations_gonfalon-integrations-crdb",
            "run_db_migrations_gonfalon-workflows-crdb"
          ],
          "sendNotifications": true,
          "stageTimeoutMs": 7200000,
          "type": "deploy"
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "completeOtherBranchesThenFail": true,
          "continuePipeline": true,
          "credentials": "kubernetes",
          "failPipeline": false,
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "notifier",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "env": [
                        {
                          "name": "METHOD",
                          "value": "POST"
                        },
                        {
                          "name": "URL",
                          "value": "https://app.sleuth.io/api/1/deployments/launchdarkly/gonfalon-web/register_deploy?ignore_if_duplicate=true"
                        },
                        {
                          "name": "BODY",
                          "value": ""
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-west-2"
                        },
                        {
                          "name": "FORM_api_key",
                          "value": "{{`{{ ssm \"${ parameters.sleuth_api_key_ssm_path }\" }}`}}"
                        },
                        {
                          "name": "FORM_environment",
                          "value": "intuit_production"
                        },
                        {
                          "name": "FORM_sha",
                          "value": "${ parameters.sha }"
                        },
                        {
                          "name": "ASSUME_ROLE",
                          "value": "SpinnakerManagedRole"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "527291094460"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/notifier:latest",
                      "name": "notifier"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Publish to Sleuth",
          "refId": "sleuth_publish",
          "requisiteStageRefIds": [
            "deploy_aws_redblack"
          ],
          "source": "text",
          "stageEnabled": {
            "expression": "sleuth_api_key_ssm_path != ''",
            "type": "expression"
          },
          "stageTimeoutMs": 60000,
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "completeOtherBranchesThenFail": true,
          "continuePipeline": true,
          "credentials": "kubernetes",
          "failPipeline": false,
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "notifier",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "env": [
                        {
                          "name": "METHOD",
                          "value": "POST"
                        },
                        {
                          "name": "URL",
                          "value": "https://api.honeycomb.io/1/markers/managed-intuit_production"
                        },
                        {
                          "name": "BODY",
                          "value": "{\n\t\t\"message\" : \"gonfalon - intuit_production - Deployment - sha: ${ parameters.sha }\",\n\t\t\"type\":\"deploy\"\n\t}"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-west-2"
                        },
                        {
                          "name": "ASSUME_ROLE",
                          "value": "SpinnakerManagedRole"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "527291094460"
                        },
                        {
                          "name": "HEADER_Accept",
                          "value": "application/json"
                        },
                        {
                          "name": "HEADER_Content_Type",
                          "value": "application/json"
                        },
                        {
                          "name": "HEADER_X_Honeycomb_Team",
                          "value": "{{`{{ ssm \"${ parameters.honeycomb_api_key_ssm_path }\" }}`}}"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/notifier:latest",
                      "name": "notifier"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Publish to Honeycomb",
          "refId": "honeycomb_publish",
          "requisiteStageRefIds": [
            "deploy_aws_redblack"
          ],
          "source": "text",
          "stageEnabled": {
            "expression": "honeycomb_api_key_ssm_path != ''",
            "type": "expression"
          },
          "stageTimeoutMs": 60000,
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "failPipeline": false,
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "notifier",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "env": [
                        {
                          "name": "METHOD",
                          "value": "POST"
                        },
                        {
                          "name": "URL",
                          "value": "https://app.ld.catamorphic.com/api/v2/accelerate/deployment-events"
                        },
                        {
                          "name": "BODY",
                          "value": "{\n  \"environmentKey\": \"managed-intuit-prod\",\n  \"eventType\": \"started\",\n  \"projectKey\": \"default\",\n  \"service\": \"gonfalon\",\n  \"version\": \"${ parameters.sha }\"\n}"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "HEADER_Authorization",
                          "value": "{{`{{ ssm \"/shared-services/common/services/accelerate/ld_api_key\" }}`}}"
                        },
                        {
                          "name": "HEADER_Content_Type",
                          "value": "application/json"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/notifier:latest",
                      "name": "notifier"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Send Accelerate started notification",
          "refId": "accelerate_started",
          "requisiteStageRefIds": [
            "determine_deployed_app_version"
          ],
          "source": "text",
          "stageEnabled": {
            "expression": "",
            "type": "expression"
          },
          "stageTimeoutMs": 60000,
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "failPipeline": false,
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "notifier",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "env": [
                        {
                          "name": "METHOD",
                          "value": "POST"
                        },
                        {
                          "name": "URL",
                          "value": "https://app.ld.catamorphic.com/api/v2/accelerate/deployment-events"
                        },
                        {
                          "name": "BODY",
                          "value": "{\n  \"environmentKey\": \"managed-intuit-prod\",\n  \"eventType\": \"finished\",\n  \"projectKey\": \"default\",\n  \"service\": \"gonfalon\",\n  \"version\": \"${ parameters.sha }\"\n}"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "HEADER_Authorization",
                          "value": "{{`{{ ssm \"/shared-services/common/services/accelerate/ld_api_key\" }}`}}"
                        },
                        {
                          "name": "HEADER_Content_Type",
                          "value": "application/json"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/notifier:latest",
                      "name": "notifier"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Send Accelerate finished notification",
          "refId": "accelerate_finished",
          "requisiteStageRefIds": [
            "deploy_aws_redblack"
          ],
          "source": "text",
          "stageEnabled": {
            "expression": "",
            "type": "expression"
          },
          "stageTimeoutMs": 60000,
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "continuePipeline": true,
          "failPipeline": false,
          "method": "POST",
          "name": "Notify #intuit deploy finished",
          "overrideTimeout": true,
          "payload": {
            "channel": "#intuit",
            "text": "${ trigger.user } is done deploying gonfalon-web - intuit_production with version ${ parameters.sha }. Check it out!"
          },
          "refId": "notification_deploy_finish_intuit",
          "requisiteStageRefIds": [
            "deploy_aws_redblack",
            "sleuth_publish",
            "honeycomb_publish"
          ],
          "stageTimeoutMs": 60000,
          "type": "webhook",
          "url": "https://hooks.slack.com/services/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"
        },
        {
          "continuePipeline": true,
          "failPipeline": false,
          "method": "POST",
          "name": "Notify #ops-intuit deploy finished",
          "overrideTimeout": true,
          "payload": {
            "channel": "#ops-intuit",
            "text": "${ trigger.user } is done deploying gonfalon-web - intuit_production with version ${ parameters.sha }. Check it out!"
          },
          "refId": "notification_deploy_finish_ops-intuit",
          "requisiteStageRefIds": [
            "deploy_aws_redblack",
            "sleuth_publish",
            "honeycomb_publish"
          ],
          "stageTimeoutMs": 60000,
          "type": "webhook",
          "url": "https://hooks.slack.com/services/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"
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "completeOtherBranchesThenFail": true,
          "continuePipeline": true,
          "credentials": "kubernetes",
          "failPipeline": false,
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "notifier",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "env": [
                        {
                          "name": "METHOD",
                          "value": "POST"
                        },
                        {
                          "name": "URL",
                          "value": "https://api.rollbar.com/api/1/deploy"
                        },
                        {
                          "name": "BODY",
                          "value": "{\n\t\t\"access_token\":   \"{{`{{ ssm \"${ parameters.rollbar_access_token_ssm_path }\" }}`}}\",\n\t\t\"environment\":    \"intuit_production\",\n\t\t\"local_username\": \"${ trigger.user }\",\n\t\t\"revision\":       \"${ parameters.sha }\",\n\t\t\"status\":         \"succeeded\"\n\t}"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-west-2"
                        },
                        {
                          "name": "ASSUME_ROLE",
                          "value": "SpinnakerManagedRole"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "527291094460"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/notifier:latest",
                      "name": "notifier"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Publish to Rollbar (succeeded)",
          "refId": "rollbar_succeeded",
          "requisiteStageRefIds": [
            "deploy_aws_redblack"
          ],
          "source": "text",
          "stageEnabled": {
            "expression": "parameters.rollbar_access_token_ssm_path != ''",
            "type": "expression"
          },
          "stageTimeoutMs": 60000,
          "type": "runJobManifest",
          "waitForCompletion": true
        }
      ],
      "triggers": null
    },
    {
      "appConfig": {},
      "application": "gonfalon",
      "expectedArtifacts": [],
      "keepWaitingPipelines": false,
      "limitConcurrent": true,
      "name": "gonfalon-web - intuit_production_dr",
      "notifications": [
        {
          "address": "eng-deploys",
          "level": "pipeline",
          "type": "slack",
          "when": [
            "pipeline.failed"
          ]
        },
        {
          "address": "ops-deploy-alerts",
          "level": "pipeline",
          "type": "slack",
          "when": [
            "pipeline.failed"
          ]
        },
        {
          "address": "gonfalon-drift-email.oqd3r7nr@launchdarkly.pagerduty.com",
          "level": "pipeline",
          "type": "email",
          "when": [
            "pipeline.failed"
          ]
        }
      ],
      "parameterConfig": [
        {
          "name": "sha",
          "description": "Artifact SHA to deploy",
          "hasOptions": false,
          "label": "Artifact SHA to deploy",
          "required": true,
          "default": ""
        },
        {
          "name": "ec2_instance_type",
          "description": "EC2 instance type",
          "hasOptions": true,
          "label": "EC2 instance type",
          "required": true,
          "options": [
            {
              "value": "m5a.xlarge"
            },
            {
              "value": "m5a.2xlarge"
            }
          ],
          "default": "m5a.xlarge"
        },
        {
          "name": "base_ami_name_prefix",
          "description": "Prefix for the base AMI name",
          "hasOptions": false,
          "label": "Prefix for the base AMI name",
          "required": true,
          "default": "ld-"
        },
        {
          "name": "rollbar_access_token_ssm_path",
          "description": "Rollbar Access Token SSM Path",
          "hasOptions": false,
          "label": "",
          "required": false,
          "default": "/global/services/gonfalon/rollbar_token"
        },
        {
          "name": "sleuth_api_key_ssm_path",
          "description": "Sleuth Api Key SSM Path",
          "hasOptions": false,
          "label": "",
          "required": false,
          "default": "/global/services/sleuth/api_key"
        },
        {
          "name": "honeycomb_api_key_ssm_path",
          "description": "Honeycomb Api Key SSM Path",
          "hasOptions": false,
          "label": "",
          "required": false,
          "default": "/production/common/services/honeycomb/write_key"
        }
      ],
      "stages": [
        {
          "continuePipeline": true,
          "customHeaders": {
            "X-LD-Private": "allowed"
          },
          "failPipeline": false,
          "method": "GET",
          "name": "Determine current version",
          "overrideTimeout": true,
          "refId": "determine_deployed_app_version",
          "requisiteStageRefIds": [],
          "stageTimeoutMs": 60000,
          "type": "webhook",
          "url": "https://gonfalon-internal.prod-dr.intuit.launchdarkly.com/api/status"
        },
        {
          "method": "POST",
          "name": "Seek #intuit deploy approval",
          "overrideTimeout": true,
          "payload": {
            "channel": "#intuit",
            "text": "${ trigger.user } wants to :deploying: gonfalon-web - intuit_production_dr with version ${ parameters['sha'] }.\nSHA diff is: https://github.com/launchdarkly/gonfalon/compare/${ #stage('Determine current version')['status'].toString() == 'SUCCEEDED' ? #stage('Determine current version')['context']['webhook']['body']['version'] : 'unknown' }...${ parameters['sha'] } | See https://deploy.launchdarkly.com/#/applications/gonfalon/executions/${ execution.id } for more information.\n\n:thumbsup: / :thumbsdown:?"
          },
          "refId": "notification_deploy_waiting_for_approval_intuit",
          "requisiteStageRefIds": [
            "determine_deployed_app_version"
          ],
          "stageEnabled": {
            "expression": "!(trigger['payload'] != null \u0026\u0026 trigger['payload']['status'] == 'thumbed')",
            "type": "expression"
          },
          "stageTimeoutMs": 60000,
          "type": "webhook",
          "url": "https://hooks.slack.com/services/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"
        },
        {
          "failPipeline": true,
          "instructions": "Deploying gonfalon-web - intuit_production_dr with version ${ parameters['sha'] }. The diff is: https://github.com/launchdarkly/gonfalon/compare/${ #stage('Determine current version')['status'].toString() == 'SUCCEEDED' ? #stage('Determine current version')['context']['webhook']['body']['version'] : 'unknown' }...${ parameters['sha'] }",
          "judgmentInputs": [],
          "name": "Confirm that deploy should continue",
          "notifications": [
            {
              "address": "deploys",
              "level": "stage",
              "type": "slack",
              "when": [
                "manualJudgment",
                "manualJudgmentContinue",
                "manualJudgmentStop"
              ]
            }
          ],
          "overrideTimeout": true,
          "refId": "confirm_deployment",
          "requisiteStageRefIds": [
            "notification_deploy_waiting_for_approval_intuit"
          ],
          "sendNotifications": true,
          "stageEnabled": {
            "expression": "!(trigger['payload'] != null \u0026\u0026 trigger['payload']['status'] == 'thumbed')",
            "type": "expression"
          },
          "stageTimeoutMs": 3600000,
          "type": "manualJudgment"
        },
        {
          "continuePipeline": true,
          "failPipeline": false,
          "method": "POST",
          "name": "Notify #intuit deploy is happening",
          "overrideTimeout": true,
          "payload": {
            "channel": "#intuit",
            "text": "${ trigger.user } is really :deploying: gonfalon-web - intuit_production_dr with version ${ parameters.sha }. Follow progress at https://deploy.launchdarkly.com/#/applications/gonfalon/executions/${ execution.id } "
          },
          "refId": "notification_deploy_start_intuit",
          "requisiteStageRefIds": [
            "confirm_deployment"
          ],
          "stageTimeoutMs": 60000,
          "type": "webhook",
          "url": "https://hooks.slack.com/services/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"
        },
        {
          "continuePipeline": true,
          "failPipeline": false,
          "method": "POST",
          "name": "Notify #ops-dr deploy is happening",
          "overrideTimeout": true,
          "payload": {
            "channel": "#ops-dr",
            "text": "${ trigger.user } is really :deploying: gonfalon-web - intuit_production_dr with version ${ parameters.sha }. Follow progress at https://deploy.launchdarkly.com/#/applications/gonfalon/executions/${ execution.id } "
          },
          "refId": "notification_deploy_start_ops-dr",
          "requisiteStageRefIds": [
            "confirm_deployment"
          ],
          "stageTimeoutMs": 60000,
          "type": "webhook",
          "url": "https://hooks.slack.com/services/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"
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "completeOtherBranchesThenFail": true,
          "continuePipeline": true,
          "credentials": "kubernetes",
          "failPipeline": false,
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "notifier",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "env": [
                        {
                          "name": "METHOD",
                          "value": "POST"
                        },
                        {
                          "name": "URL",
                          "value": "https://api.rollbar.com/api/1/deploy"
                        },
                        {
                          "name": "BODY",
                          "value": "{\n\t\t\"access_token\":   \"{{`{{ ssm \"${ parameters.rollbar_access_token_ssm_path }\" }}`}}\",\n\t\t\"environment\":    \"intuit_production_dr\",\n\t\t\"local_username\": \"${ trigger.user }\",\n\t\t\"revision\":       \"${ parameters.sha }\",\n\t\t\"status\":         \"started\"\n\t}"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-2"
                        },
                        {
                          "name": "ASSUME_ROLE",
                          "value": "SpinnakerManagedRole"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "527291094460"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/notifier:latest",
                      "name": "notifier"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Publish to Rollbar (started)",
          "refId": "rollbar_started",
          "requisiteStageRefIds": [
            "confirm_deployment"
          ],
          "source": "text",
          "stageEnabled": {
            "expression": "parameters.rollbar_access_token_ssm_path != ''",
            "type": "expression"
          },
          "stageTimeoutMs": 60000,
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "cloudProvider": "aws",
          "cloudProviderType": "aws",
          "name": "Lookup AMI ID for Baked Artifact AMI",
          "overrideTimeout": true,
          "packageName": "gonfalon-web-${ parameters.sha }*ubuntu",
          "refId": "lookup_baked_artifact_ami_id",
          "regions": [
            "us-east-2"
          ],
          "requisiteStageRefIds": [
            "determine_deployed_app_version",
            "notification_deploy_waiting_for_approval_intuit",
            "confirm_deployment"
          ],
          "stageTimeoutMs": 60000,
          "tags": {},
          "type": "findImageFromTags"
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "run-db-migrations-coderefs-crdb",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "command": [
                        "/bin/run-migrations"
                      ],
                      "env": [
                        {
                          "name": "SHA",
                          "value": "${ parameters['sha'] }"
                        },
                        {
                          "name": "DATABASE",
                          "value": "coderefs-crdb"
                        },
                        {
                          "name": "ENV_SHORT_NAME",
                          "value": "intuit_production_dr"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-2"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "527291094460"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/mild:latest",
                      "name": "run-migrations"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Run DB migrations for coderefs-crdb",
          "refId": "run_db_migrations_coderefs-crdb",
          "requisiteStageRefIds": [
            "lookup_baked_artifact_ami_id"
          ],
          "source": "text",
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "run-db-migrations-oauth2-crdb",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "command": [
                        "/bin/run-migrations"
                      ],
                      "env": [
                        {
                          "name": "SHA",
                          "value": "${ parameters['sha'] }"
                        },
                        {
                          "name": "DATABASE",
                          "value": "oauth2-crdb"
                        },
                        {
                          "name": "ENV_SHORT_NAME",
                          "value": "intuit_production_dr"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-2"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "527291094460"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/mild:latest",
                      "name": "run-migrations"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Run DB migrations for oauth2-crdb",
          "refId": "run_db_migrations_oauth2-crdb",
          "requisiteStageRefIds": [
            "lookup_baked_artifact_ami_id"
          ],
          "source": "text",
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "run-db-migrations-accounts-crdb",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "command": [
                        "/bin/run-migrations"
                      ],
                      "env": [
                        {
                          "name": "SHA",
                          "value": "${ parameters['sha'] }"
                        },
                        {
                          "name": "DATABASE",
                          "value": "accounts-crdb"
                        },
                        {
                          "name": "ENV_SHORT_NAME",
                          "value": "intuit_production_dr"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-2"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "527291094460"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/mild:latest",
                      "name": "run-migrations"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Run DB migrations for accounts-crdb",
          "refId": "run_db_migrations_accounts-crdb",
          "requisiteStageRefIds": [
            "lookup_baked_artifact_ami_id"
          ],
          "source": "text",
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "run-db-migrations-gonfalon-accounts-crdb",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "command": [
                        "/bin/run-migrations"
                      ],
                      "env": [
                        {
                          "name": "SHA",
                          "value": "${ parameters['sha'] }"
                        },
                        {
                          "name": "DATABASE",
                          "value": "gonfalon-accounts-crdb"
                        },
                        {
                          "name": "ENV_SHORT_NAME",
                          "value": "intuit_production_dr"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-2"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "527291094460"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/mild:latest",
                      "name": "run-migrations"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Run DB migrations for gonfalon-accounts-crdb",
          "refId": "run_db_migrations_gonfalon-accounts-crdb",
          "requisiteStageRefIds": [
            "lookup_baked_artifact_ami_id"
          ],
          "source": "text",
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "run-db-migrations-gonfalon-billing-crdb",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "command": [
                        "/bin/run-migrations"
                      ],
                      "env": [
                        {
                          "name": "SHA",
                          "value": "${ parameters['sha'] }"
                        },
                        {
                          "name": "DATABASE",
                          "value": "gonfalon-billing-crdb"
                        },
                        {
                          "name": "ENV_SHORT_NAME",
                          "value": "intuit_production_dr"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-2"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "527291094460"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/mild:latest",
                      "name": "run-migrations"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Run DB migrations for gonfalon-billing-crdb",
          "refId": "run_db_migrations_gonfalon-billing-crdb",
          "requisiteStageRefIds": [
            "lookup_baked_artifact_ami_id"
          ],
          "source": "text",
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "run-db-migrations-gonfalon-integrations-crdb",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "command": [
                        "/bin/run-migrations"
                      ],
                      "env": [
                        {
                          "name": "SHA",
                          "value": "${ parameters['sha'] }"
                        },
                        {
                          "name": "DATABASE",
                          "value": "gonfalon-integrations-crdb"
                        },
                        {
                          "name": "ENV_SHORT_NAME",
                          "value": "intuit_production_dr"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-2"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "527291094460"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/mild:latest",
                      "name": "run-migrations"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Run DB migrations for gonfalon-integrations-crdb",
          "refId": "run_db_migrations_gonfalon-integrations-crdb",
          "requisiteStageRefIds": [
            "lookup_baked_artifact_ami_id"
          ],
          "source": "text",
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "run-db-migrations-gonfalon-workflows-crdb",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "command": [
                        "/bin/run-migrations"
                      ],
                      "env": [
                        {
                          "name": "SHA",
                          "value": "${ parameters['sha'] }"
                        },
                        {
                          "name": "DATABASE",
                          "value": "gonfalon-workflows-crdb"
                        },
                        {
                          "name": "ENV_SHORT_NAME",
                          "value": "intuit_production_dr"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-2"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "527291094460"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/mild:latest",
                      "name": "run-migrations"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Run DB migrations for gonfalon-workflows-crdb",
          "refId": "run_db_migrations_gonfalon-workflows-crdb",
          "requisiteStageRefIds": [
            "lookup_baked_artifact_ami_id"
          ],
          "source": "text",
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "clusters": [
            {
              "account": "intuit-production",
              "application": "gonfalon",
              "associatePublicIpAddress": false,
              "availabilityZones": {
                "us-east-2": [
                  "us-east-2a",
                  "us-east-2b",
                  "us-east-2c"
                ]
              },
              "base64UserData": "",
              "capacity": {
                "desired": 2,
                "max": 2,
                "min": 2
              },
              "cloudProvider": "aws",
              "cooldown": 120,
              "copySourceCustomBlockDeviceMappings": false,
              "delayBeforeDisableSec": 60,
              "delayBeforeScaleDownSec": 1800,
              "dirty": {},
              "ebsOptimized": false,
              "enabledMetrics": [
                "GroupMinSize",
                "GroupMaxSize",
                "GroupDesiredCapacity",
                "GroupInServiceInstances",
                "GroupPendingInstances",
                "GroupStandbyInstances",
                "GroupTerminatingInstances",
                "GroupTotalInstances"
              ],
              "freeFormDetails": "dr",
              "healthCheckGracePeriod": 240,
              "healthCheckType": "ELB",
              "iamRole": "intuit_production_dr-gonfalon",
              "instanceMonitoring": true,
              "instanceType": "${ parameters.ec2_instance_type }",
              "keyPair": "ld_shared",
              "launchTemplateOverridesForInstanceType": null,
              "loadBalancers": [],
              "maxRemainingAsgs": 2,
              "moniker": {
                "app": "gonfalon",
                "detail": "dr",
                "stack": "web"
              },
              "preferSourceCapacity": true,
              "provider": "aws",
              "rollback": {
                "onFailure": true
              },
              "scaleDown": true,
              "securityGroups": [
                "sg-09d7eb181154c9e03",
                "sg-0ac7f0e7288940ac0",
                "sg-0aeb4143cfbd2a6e6",
                "sg-099dd65436ef6a437",
                "sg-0b8e9306ee9121d04",
                "sg-013cce4b54d7295d7",
                "sg-034a83c89d0b60a1c"
              ],
              "setLaunchTemplate": false,
              "spelLoadBalancers": [],
              "spelTargetGroups": [],
              "spotPrice": "",
              "stack": "web",
              "strategy": "redblack",
              "subnetType": "dr-private-subnet",
              "suspendedProcesses": [],
              "tags": {
                "Name": "gonfalon-web (intuit_production_dr)",
                "dogfoodCanary": "false",
                "env": "intuit_production_dr",
                "environment": "intuit_production_dr",
                "managed_by": "spinnaker",
                "owner": "common",
                "region": "us-east-2",
                "role": "gonfalon-web",
                "service": "app.launchdarkly.com",
                "sha": "${ parameters.sha }",
                "tier": "dr"
              },
              "targetGroups": [
                "gonfalon-web-dr",
                "gonfalon-web-internal-dr"
              ],
              "targetHealthyDeployPercentage": 100,
              "terminationPolicies": [
                "Default"
              ],
              "useAmiBlockDeviceMappings": true,
              "useSourceCapacity": true
            }
          ],
          "customSubject": "Deployed gonfalon-web-${ parameters['sha'] } to intuit_production_dr",
          "name": "Deploy application to AWS",
          "notifications": [
            {
              "address": "changelog-intuit_production_dr@launchdarkly.com",
              "level": "stage",
              "message": {
                "stage.complete": {
                  "text": "Details: Deployed gonfalon-web-${ parameters['sha'] } to intuit_production_dr.  The diff is: https://github.com/launchdarkly/gonfalon/compare/${ #stage('Determine current version')['status'].toString() == 'SUCCEEDED' ? #stage('Determine current version')['context']['webhook']['body']['version'] : 'unknown' }...${ parameters['sha'] }\n\n!intuit_production_dr !deploy\n\nWho: ${ trigger['user'] } via ${ trigger['type'] } trigger\n\nTopic: gonfalon-web\n\nWhen: ${ new java.text.SimpleDateFormat('EEE MMM d HH:mm:ss z YYYY').format(new java.util.Date())}\n\n"
                }
              },
              "type": "email",
              "when": [
                "stage.complete"
              ]
            }
          ],
          "overrideTimeout": true,
          "refId": "deploy_aws_redblack",
          "requisiteStageRefIds": [
            "lookup_baked_artifact_ami_id",
            "run_db_migrations_coderefs-crdb",
            "run_db_migrations_oauth2-crdb",
            "run_db_migrations_accounts-crdb",
            "run_db_migrations_gonfalon-accounts-crdb",
            "run_db_migrations_gonfalon-billing-crdb",
            "run_db_migrations_gonfalon-integrations-crdb",
            "run_db_migrations_gonfalon-workflows-crdb"
          ],
          "sendNotifications": true,
          "stageTimeoutMs": 7200000,
          "type": "deploy"
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "completeOtherBranchesThenFail": true,
          "continuePipeline": true,
          "credentials": "kubernetes",
          "failPipeline": false,
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "notifier",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "env": [
                        {
                          "name": "METHOD",
                          "value": "POST"
                        },
                        {
                          "name": "URL",
                          "value": "https://app.sleuth.io/api/1/deployments/launchdarkly/gonfalon-web/register_deploy?ignore_if_duplicate=true"
                        },
                        {
                          "name": "BODY",
                          "value": ""
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-2"
                        },
                        {
                          "name": "FORM_api_key",
                          "value": "{{`{{ ssm \"${ parameters.sleuth_api_key_ssm_path }\" }}`}}"
                        },
                        {
                          "name": "FORM_environment",
                          "value": "intuit_production_dr"
                        },
                        {
                          "name": "FORM_sha",
                          "value": "${ parameters.sha }"
                        },
                        {
                          "name": "ASSUME_ROLE",
                          "value": "SpinnakerManagedRole"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "527291094460"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/notifier:latest",
                      "name": "notifier"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Publish to Sleuth",
          "refId": "sleuth_publish",
          "requisiteStageRefIds": [
            "deploy_aws_redblack"
          ],
          "source": "text",
          "stageEnabled": {
            "expression": "sleuth_api_key_ssm_path != ''",
            "type": "expression"
          },
          "stageTimeoutMs": 60000,
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "completeOtherBranchesThenFail": true,
          "continuePipeline": true,
          "credentials": "kubernetes",
          "failPipeline": false,
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "notifier",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "env": [
                        {
                          "name": "METHOD",
                          "value": "POST"
                        },
                        {
                          "name": "URL",
                          "value": "https://api.honeycomb.io/1/markers/managed-intuit_production"
                        },
                        {
                          "name": "BODY",
                          "value": "{\n\t\t\"message\" : \"gonfalon - intuit_production_dr - Deployment - sha: ${ parameters.sha }\",\n\t\t\"type\":\"deploy\"\n\t}"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-2"
                        },
                        {
                          "name": "ASSUME_ROLE",
                          "value": "SpinnakerManagedRole"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "527291094460"
                        },
                        {
                          "name": "HEADER_Accept",
                          "value": "application/json"
                        },
                        {
                          "name": "HEADER_Content_Type",
                          "value": "application/json"
                        },
                        {
                          "name": "HEADER_X_Honeycomb_Team",
                          "value": "{{`{{ ssm \"${ parameters.honeycomb_api_key_ssm_path }\" }}`}}"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/notifier:latest",
                      "name": "notifier"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Publish to Honeycomb",
          "refId": "honeycomb_publish",
          "requisiteStageRefIds": [
            "deploy_aws_redblack"
          ],
          "source": "text",
          "stageEnabled": {
            "expression": "honeycomb_api_key_ssm_path != ''",
            "type": "expression"
          },
          "stageTimeoutMs": 60000,
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "continuePipeline": true,
          "failPipeline": false,
          "method": "POST",
          "name": "Notify #intuit deploy finished",
          "overrideTimeout": true,
          "payload": {
            "channel": "#intuit",
            "text": "${ trigger.user } is done deploying gonfalon-web - intuit_production_dr with version ${ parameters.sha }. Check it out!"
          },
          "refId": "notification_deploy_finish_intuit",
          "requisiteStageRefIds": [
            "deploy_aws_redblack",
            "sleuth_publish",
            "honeycomb_publish"
          ],
          "stageTimeoutMs": 60000,
          "type": "webhook",
          "url": "https://hooks.slack.com/services/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"
        },
        {
          "continuePipeline": true,
          "failPipeline": false,
          "method": "POST",
          "name": "Notify #ops-dr deploy finished",
          "overrideTimeout": true,
          "payload": {
            "channel": "#ops-dr",
            "text": "${ trigger.user } is done deploying gonfalon-web - intuit_production_dr with version ${ parameters.sha }. Check it out!"
          },
          "refId": "notification_deploy_finish_ops-dr",
          "requisiteStageRefIds": [
            "deploy_aws_redblack",
            "sleuth_publish",
            "honeycomb_publish"
          ],
          "stageTimeoutMs": 60000,
          "type": "webhook",
          "url": "https://hooks.slack.com/services/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"
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "completeOtherBranchesThenFail": true,
          "continuePipeline": true,
          "credentials": "kubernetes",
          "failPipeline": false,
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "notifier",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "env": [
                        {
                          "name": "METHOD",
                          "value": "POST"
                        },
                        {
                          "name": "URL",
                          "value": "https://api.rollbar.com/api/1/deploy"
                        },
                        {
                          "name": "BODY",
                          "value": "{\n\t\t\"access_token\":   \"{{`{{ ssm \"${ parameters.rollbar_access_token_ssm_path }\" }}`}}\",\n\t\t\"environment\":    \"intuit_production_dr\",\n\t\t\"local_username\": \"${ trigger.user }\",\n\t\t\"revision\":       \"${ parameters.sha }\",\n\t\t\"status\":         \"succeeded\"\n\t}"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-2"
                        },
                        {
                          "name": "ASSUME_ROLE",
                          "value": "SpinnakerManagedRole"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "527291094460"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/notifier:latest",
                      "name": "notifier"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Publish to Rollbar (succeeded)",
          "refId": "rollbar_succeeded",
          "requisiteStageRefIds": [
            "deploy_aws_redblack"
          ],
          "source": "text",
          "stageEnabled": {
            "expression": "parameters.rollbar_access_token_ssm_path != ''",
            "type": "expression"
          },
          "stageTimeoutMs": 60000,
          "type": "runJobManifest",
          "waitForCompletion": true
        }
      ],
      "triggers": null
    },
    {
      "appConfig": {},
      "application": "gonfalon",
      "expectedArtifacts": [],
      "keepWaitingPipelines": false,
      "limitConcurrent": true,
      "name": "gonfalon-web - intuit_staging",
      "notifications": [
        {
          "address": "eng-deploys",
          "level": "pipeline",
          "type": "slack",
          "when": [
            "pipeline.failed"
          ]
        },
        {
          "address": "ops-deploy-alerts",
          "level": "pipeline",
          "type": "slack",
          "when": [
            "pipeline.failed"
          ]
        },
        {
          "address": "gonfalon-drift-email.oqd3r7nr@launchdarkly.pagerduty.com",
          "level": "pipeline",
          "type": "email",
          "when": [
            "pipeline.failed"
          ]
        }
      ],
      "parameterConfig": [
        {
          "name": "sha",
          "description": "Artifact SHA to deploy",
          "hasOptions": false,
          "label": "Artifact SHA to deploy",
          "required": true,
          "default": ""
        },
        {
          "name": "ec2_instance_type",
          "description": "EC2 instance type",
          "hasOptions": true,
          "label": "EC2 instance type",
          "required": true,
          "options": [
            {
              "value": "m5a.xlarge"
            },
            {
              "value": "m5a.2xlarge"
            }
          ],
          "default": "m5a.xlarge"
        },
        {
          "name": "base_ami_name_prefix",
          "description": "Prefix for the base AMI name",
          "hasOptions": false,
          "label": "Prefix for the base AMI name",
          "required": true,
          "default": "ld-"
        },
        {
          "name": "rollbar_access_token_ssm_path",
          "description": "Rollbar Access Token SSM Path",
          "hasOptions": false,
          "label": "",
          "required": false,
          "default": "/global/services/gonfalon/rollbar_token"
        },
        {
          "name": "sleuth_api_key_ssm_path",
          "description": "Sleuth Api Key SSM Path",
          "hasOptions": false,
          "label": "",
          "required": false,
          "default": "/global/services/sleuth/api_key"
        },
        {
          "name": "honeycomb_api_key_ssm_path",
          "description": "Honeycomb Api Key SSM Path",
          "hasOptions": false,
          "label": "",
          "required": false,
          "default": "/staging/common/services/honeycomb/write_key"
        }
      ],
      "stages": [
        {
          "continuePipeline": true,
          "customHeaders": {
            "X-LD-Private": "allowed"
          },
          "failPipeline": false,
          "method": "GET",
          "name": "Determine current version",
          "overrideTimeout": true,
          "refId": "determine_deployed_app_version",
          "requisiteStageRefIds": [],
          "stageTimeoutMs": 60000,
          "type": "webhook",
          "url": "https://gonfalon-internal.stg.intuit.launchdarkly.com/api/status"
        },
        {
          "continuePipeline": true,
          "failPipeline": false,
          "method": "POST",
          "name": "Notify #ops-intuit deploy is happening",
          "overrideTimeout": true,
          "payload": {
            "channel": "#ops-intuit",
            "text": "${ trigger.user } is really :deploying: gonfalon-web - intuit_staging with version ${ parameters.sha }. Follow progress at https://deploy.launchdarkly.com/#/applications/gonfalon/executions/${ execution.id } "
          },
          "refId": "notification_deploy_start_ops-intuit",
          "requisiteStageRefIds": [
            "determine_deployed_app_version"
          ],
          "stageTimeoutMs": 60000,
          "type": "webhook",
          "url": "https://hooks.slack.com/services/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"
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "completeOtherBranchesThenFail": true,
          "continuePipeline": true,
          "credentials": "kubernetes",
          "failPipeline": false,
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "notifier",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "env": [
                        {
                          "name": "METHOD",
                          "value": "POST"
                        },
                        {
                          "name": "URL",
                          "value": "https://api.rollbar.com/api/1/deploy"
                        },
                        {
                          "name": "BODY",
                          "value": "{\n\t\t\"access_token\":   \"{{`{{ ssm \"${ parameters.rollbar_access_token_ssm_path }\" }}`}}\",\n\t\t\"environment\":    \"intuit_staging\",\n\t\t\"local_username\": \"${ trigger.user }\",\n\t\t\"revision\":       \"${ parameters.sha }\",\n\t\t\"status\":         \"started\"\n\t}"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-west-2"
                        },
                        {
                          "name": "ASSUME_ROLE",
                          "value": "SpinnakerManagedRole"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "527291094460"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/notifier:latest",
                      "name": "notifier"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Publish to Rollbar (started)",
          "refId": "rollbar_started",
          "requisiteStageRefIds": [
            "determine_deployed_app_version"
          ],
          "source": "text",
          "stageEnabled": {
            "expression": "parameters.rollbar_access_token_ssm_path != ''",
            "type": "expression"
          },
          "stageTimeoutMs": 60000,
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "cloudProvider": "aws",
          "cloudProviderType": "aws",
          "name": "Lookup AMI ID for Baked Artifact AMI",
          "overrideTimeout": true,
          "packageName": "gonfalon-web-${ parameters.sha }*ubuntu",
          "refId": "lookup_baked_artifact_ami_id",
          "regions": [
            "us-west-2"
          ],
          "requisiteStageRefIds": [
            "determine_deployed_app_version"
          ],
          "stageTimeoutMs": 60000,
          "tags": {},
          "type": "findImageFromTags"
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "run-db-migrations-coderefs-crdb",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "command": [
                        "/bin/run-migrations"
                      ],
                      "env": [
                        {
                          "name": "SHA",
                          "value": "${ parameters['sha'] }"
                        },
                        {
                          "name": "DATABASE",
                          "value": "coderefs-crdb"
                        },
                        {
                          "name": "ENV_SHORT_NAME",
                          "value": "intuit_staging"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-west-2"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "527291094460"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/mild:latest",
                      "name": "run-migrations"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Run DB migrations for coderefs-crdb",
          "refId": "run_db_migrations_coderefs-crdb",
          "requisiteStageRefIds": [
            "lookup_baked_artifact_ami_id"
          ],
          "source": "text",
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "run-db-migrations-oauth2-crdb",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "command": [
                        "/bin/run-migrations"
                      ],
                      "env": [
                        {
                          "name": "SHA",
                          "value": "${ parameters['sha'] }"
                        },
                        {
                          "name": "DATABASE",
                          "value": "oauth2-crdb"
                        },
                        {
                          "name": "ENV_SHORT_NAME",
                          "value": "intuit_staging"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-west-2"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "527291094460"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/mild:latest",
                      "name": "run-migrations"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Run DB migrations for oauth2-crdb",
          "refId": "run_db_migrations_oauth2-crdb",
          "requisiteStageRefIds": [
            "lookup_baked_artifact_ami_id"
          ],
          "source": "text",
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "run-db-migrations-accounts-crdb",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "command": [
                        "/bin/run-migrations"
                      ],
                      "env": [
                        {
                          "name": "SHA",
                          "value": "${ parameters['sha'] }"
                        },
                        {
                          "name": "DATABASE",
                          "value": "accounts-crdb"
                        },
                        {
                          "name": "ENV_SHORT_NAME",
                          "value": "intuit_staging"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-west-2"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "527291094460"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/mild:latest",
                      "name": "run-migrations"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Run DB migrations for accounts-crdb",
          "refId": "run_db_migrations_accounts-crdb",
          "requisiteStageRefIds": [
            "lookup_baked_artifact_ami_id"
          ],
          "source": "text",
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "run-db-migrations-gonfalon-accounts-crdb",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "command": [
                        "/bin/run-migrations"
                      ],
                      "env": [
                        {
                          "name": "SHA",
                          "value": "${ parameters['sha'] }"
                        },
                        {
                          "name": "DATABASE",
                          "value": "gonfalon-accounts-crdb"
                        },
                        {
                          "name": "ENV_SHORT_NAME",
                          "value": "intuit_staging"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-west-2"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "527291094460"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/mild:latest",
                      "name": "run-migrations"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Run DB migrations for gonfalon-accounts-crdb",
          "refId": "run_db_migrations_gonfalon-accounts-crdb",
          "requisiteStageRefIds": [
            "lookup_baked_artifact_ami_id"
          ],
          "source": "text",
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "run-db-migrations-gonfalon-billing-crdb",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "command": [
                        "/bin/run-migrations"
                      ],
                      "env": [
                        {
                          "name": "SHA",
                          "value": "${ parameters['sha'] }"
                        },
                        {
                          "name": "DATABASE",
                          "value": "gonfalon-billing-crdb"
                        },
                        {
                          "name": "ENV_SHORT_NAME",
                          "value": "intuit_staging"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-west-2"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "527291094460"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/mild:latest",
                      "name": "run-migrations"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Run DB migrations for gonfalon-billing-crdb",
          "refId": "run_db_migrations_gonfalon-billing-crdb",
          "requisiteStageRefIds": [
            "lookup_baked_artifact_ami_id"
          ],
          "source": "text",
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "run-db-migrations-gonfalon-integrations-crdb",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "command": [
                        "/bin/run-migrations"
                      ],
                      "env": [
                        {
                          "name": "SHA",
                          "value": "${ parameters['sha'] }"
                        },
                        {
                          "name": "DATABASE",
                          "value": "gonfalon-integrations-crdb"
                        },
                        {
                          "name": "ENV_SHORT_NAME",
                          "value": "intuit_staging"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-west-2"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "527291094460"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/mild:latest",
                      "name": "run-migrations"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Run DB migrations for gonfalon-integrations-crdb",
          "refId": "run_db_migrations_gonfalon-integrations-crdb",
          "requisiteStageRefIds": [
            "lookup_baked_artifact_ami_id"
          ],
          "source": "text",
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "run-db-migrations-gonfalon-workflows-crdb",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "command": [
                        "/bin/run-migrations"
                      ],
                      "env": [
                        {
                          "name": "SHA",
                          "value": "${ parameters['sha'] }"
                        },
                        {
                          "name": "DATABASE",
                          "value": "gonfalon-workflows-crdb"
                        },
                        {
                          "name": "ENV_SHORT_NAME",
                          "value": "intuit_staging"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-west-2"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "527291094460"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/mild:latest",
                      "name": "run-migrations"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Run DB migrations for gonfalon-workflows-crdb",
          "refId": "run_db_migrations_gonfalon-workflows-crdb",
          "requisiteStageRefIds": [
            "lookup_baked_artifact_ami_id"
          ],
          "source": "text",
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "clusters": [
            {
              "account": "intuit-production",
              "application": "gonfalon",
              "associatePublicIpAddress": false,
              "availabilityZones": {
                "us-west-2": [
                  "us-west-2a",
                  "us-west-2b",
                  "us-west-2c"
                ]
              },
              "base64UserData": "",
              "capacity": {
                "desired": 2,
                "max": 2,
                "min": 2
              },
              "cloudProvider": "aws",
              "cooldown": 120,
              "copySourceCustomBlockDeviceMappings": false,
              "delayBeforeDisableSec": 60,
              "delayBeforeScaleDownSec": 300,
              "dirty": {},
              "ebsOptimized": false,
              "enabledMetrics": [
                "GroupMinSize",
                "GroupMaxSize",
                "GroupDesiredCapacity",
                "GroupInServiceInstances",
                "GroupPendingInstances",
                "GroupStandbyInstances",
                "GroupTerminatingInstances",
                "GroupTotalInstances"
              ],
              "freeFormDetails": "int-stg",
              "healthCheckGracePeriod": 240,
              "healthCheckType": "ELB",
              "iamRole": "intuit_staging-gonfalon",
              "instanceMonitoring": true,
              "instanceType": "${ parameters.ec2_instance_type }",
              "keyPair": "ld_shared",
              "launchTemplateOverridesForInstanceType": null,
              "loadBalancers": [],
              "maxRemainingAsgs": 2,
              "moniker": {
                "app": "gonfalon",
                "detail": "int-stg",
                "stack": "web"
              },
              "preferSourceCapacity": true,
              "provider": "aws",
              "rollback": {
                "onFailure": true
              },
              "scaleDown": true,
              "securityGroups": [
                "sg-daab32a0",
                "sg-3f1f8d45",
                "sg-11b32d6b",
                "sg-076611569209e98be",
                "sg-74b82304",
                "sg-5ba83121",
                "sg-015dadb6be57e519f",
                "sg-09717b62e0730fa34",
                "sg-035d5342f546b6368",
                "sg-0eb0f2cc096b5781b",
                "sg-02ab734438fd820c7"
              ],
              "setLaunchTemplate": false,
              "spelLoadBalancers": [],
              "spelTargetGroups": [],
              "spotPrice": "",
              "stack": "web",
              "strategy": "redblack",
              "subnetType": "staging-private-subnet",
              "suspendedProcesses": [],
              "tags": {
                "Name": "gonfalon-web (intuit_staging)",
                "dogfoodCanary": "false",
                "env": "intuit_staging",
                "environment": "intuit_staging",
                "managed_by": "spinnaker",
                "owner": "common",
                "region": "us-west-2",
                "role": "gonfalon-web",
                "service": "app.launchdarkly.com",
                "sha": "${ parameters.sha }",
                "tier": "staging"
              },
              "targetGroups": [
                "gonfalon-web-int-stg",
                "gonfalon-web-internal-int-stg"
              ],
              "targetHealthyDeployPercentage": 100,
              "terminationPolicies": [
                "Default"
              ],
              "useAmiBlockDeviceMappings": true,
              "useSourceCapacity": true
            }
          ],
          "customSubject": "Deployed gonfalon-web-${ parameters['sha'] } to intuit_staging",
          "name": "Deploy application to AWS",
          "notifications": [
            {
              "address": "changelog-intuit_staging@launchdarkly.com",
              "level": "stage",
              "message": {
                "stage.complete": {
                  "text": "Details: Deployed gonfalon-web-${ parameters['sha'] } to intuit_staging.  The diff is: https://github.com/launchdarkly/gonfalon/compare/${ #stage('Determine current version')['status'].toString() == 'SUCCEEDED' ? #stage('Determine current version')['context']['webhook']['body']['version'] : 'unknown' }...${ parameters['sha'] }\n\n!intuit_staging !deploy\n\nWho: ${ trigger['user'] } via ${ trigger['type'] } trigger\n\nTopic: gonfalon-web\n\nWhen: ${ new java.text.SimpleDateFormat('EEE MMM d HH:mm:ss z YYYY').format(new java.util.Date())}\n\n"
                }
              },
              "type": "email",
              "when": [
                "stage.complete"
              ]
            }
          ],
          "overrideTimeout": true,
          "refId": "deploy_aws_redblack",
          "requisiteStageRefIds": [
            "lookup_baked_artifact_ami_id",
            "run_db_migrations_coderefs-crdb",
            "run_db_migrations_oauth2-crdb",
            "run_db_migrations_accounts-crdb",
            "run_db_migrations_gonfalon-accounts-crdb",
            "run_db_migrations_gonfalon-billing-crdb",
            "run_db_migrations_gonfalon-integrations-crdb",
            "run_db_migrations_gonfalon-workflows-crdb"
          ],
          "sendNotifications": true,
          "stageTimeoutMs": 2700000,
          "type": "deploy"
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "completeOtherBranchesThenFail": true,
          "continuePipeline": true,
          "credentials": "kubernetes",
          "failPipeline": false,
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "notifier",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "env": [
                        {
                          "name": "METHOD",
                          "value": "POST"
                        },
                        {
                          "name": "URL",
                          "value": "https://app.sleuth.io/api/1/deployments/launchdarkly/gonfalon-web/register_deploy?ignore_if_duplicate=true"
                        },
                        {
                          "name": "BODY",
                          "value": ""
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-west-2"
                        },
                        {
                          "name": "FORM_api_key",
                          "value": "{{`{{ ssm \"${ parameters.sleuth_api_key_ssm_path }\" }}`}}"
                        },
                        {
                          "name": "FORM_environment",
                          "value": "intuit_staging"
                        },
                        {
                          "name": "FORM_sha",
                          "value": "${ parameters.sha }"
                        },
                        {
                          "name": "ASSUME_ROLE",
                          "value": "SpinnakerManagedRole"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "527291094460"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/notifier:latest",
                      "name": "notifier"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Publish to Sleuth",
          "refId": "sleuth_publish",
          "requisiteStageRefIds": [
            "deploy_aws_redblack"
          ],
          "source": "text",
          "stageEnabled": {
            "expression": "sleuth_api_key_ssm_path != ''",
            "type": "expression"
          },
          "stageTimeoutMs": 60000,
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "completeOtherBranchesThenFail": true,
          "continuePipeline": true,
          "credentials": "kubernetes",
          "failPipeline": false,
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "notifier",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "env": [
                        {
                          "name": "METHOD",
                          "value": "POST"
                        },
                        {
                          "name": "URL",
                          "value": "https://api.honeycomb.io/1/markers/managed-intuit_staging"
                        },
                        {
                          "name": "BODY",
                          "value": "{\n\t\t\"message\" : \"gonfalon - intuit_staging - Deployment - sha: ${ parameters.sha }\",\n\t\t\"type\":\"deploy\"\n\t}"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-west-2"
                        },
                        {
                          "name": "ASSUME_ROLE",
                          "value": "SpinnakerManagedRole"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "527291094460"
                        },
                        {
                          "name": "HEADER_Accept",
                          "value": "application/json"
                        },
                        {
                          "name": "HEADER_Content_Type",
                          "value": "application/json"
                        },
                        {
                          "name": "HEADER_X_Honeycomb_Team",
                          "value": "{{`{{ ssm \"${ parameters.honeycomb_api_key_ssm_path }\" }}`}}"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/notifier:latest",
                      "name": "notifier"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Publish to Honeycomb",
          "refId": "honeycomb_publish",
          "requisiteStageRefIds": [
            "deploy_aws_redblack"
          ],
          "source": "text",
          "stageEnabled": {
            "expression": "honeycomb_api_key_ssm_path != ''",
            "type": "expression"
          },
          "stageTimeoutMs": 60000,
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "failPipeline": false,
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "notifier",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "env": [
                        {
                          "name": "METHOD",
                          "value": "POST"
                        },
                        {
                          "name": "URL",
                          "value": "https://app.ld.catamorphic.com/api/v2/accelerate/deployment-events"
                        },
                        {
                          "name": "BODY",
                          "value": "{\n  \"environmentKey\": \"managed-intuit-stg\",\n  \"eventType\": \"started\",\n  \"projectKey\": \"default\",\n  \"service\": \"gonfalon\",\n  \"version\": \"${ parameters.sha }\"\n}"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "HEADER_Authorization",
                          "value": "{{`{{ ssm \"/shared-services/common/services/accelerate/ld_api_key\" }}`}}"
                        },
                        {
                          "name": "HEADER_Content_Type",
                          "value": "application/json"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/notifier:latest",
                      "name": "notifier"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Send Accelerate started notification",
          "refId": "accelerate_started",
          "requisiteStageRefIds": [
            "determine_deployed_app_version"
          ],
          "source": "text",
          "stageEnabled": {
            "expression": "",
            "type": "expression"
          },
          "stageTimeoutMs": 60000,
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "failPipeline": false,
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "notifier",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "env": [
                        {
                          "name": "METHOD",
                          "value": "POST"
                        },
                        {
                          "name": "URL",
                          "value": "https://app.ld.catamorphic.com/api/v2/accelerate/deployment-events"
                        },
                        {
                          "name": "BODY",
                          "value": "{\n  \"environmentKey\": \"managed-intuit-stg\",\n  \"eventType\": \"finished\",\n  \"projectKey\": \"default\",\n  \"service\": \"gonfalon\",\n  \"version\": \"${ parameters.sha }\"\n}"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "HEADER_Authorization",
                          "value": "{{`{{ ssm \"/shared-services/common/services/accelerate/ld_api_key\" }}`}}"
                        },
                        {
                          "name": "HEADER_Content_Type",
                          "value": "application/json"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/notifier:latest",
                      "name": "notifier"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Send Accelerate finished notification",
          "refId": "accelerate_finished",
          "requisiteStageRefIds": [
            "deploy_aws_redblack"
          ],
          "source": "text",
          "stageEnabled": {
            "expression": "",
            "type": "expression"
          },
          "stageTimeoutMs": 60000,
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "continuePipeline": true,
          "failPipeline": false,
          "method": "POST",
          "name": "Notify #ops-intuit deploy finished",
          "overrideTimeout": true,
          "payload": {
            "channel": "#ops-intuit",
            "text": "${ trigger.user } is done deploying gonfalon-web - intuit_staging with version ${ parameters.sha }. Check it out!"
          },
          "refId": "notification_deploy_finish_ops-intuit",
          "requisiteStageRefIds": [
            "deploy_aws_redblack",
            "sleuth_publish",
            "honeycomb_publish"
          ],
          "stageTimeoutMs": 60000,
          "type": "webhook",
          "url": "https://hooks.slack.com/services/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"
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "completeOtherBranchesThenFail": true,
          "continuePipeline": true,
          "credentials": "kubernetes",
          "failPipeline": false,
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "notifier",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "env": [
                        {
                          "name": "METHOD",
                          "value": "POST"
                        },
                        {
                          "name": "URL",
                          "value": "https://api.rollbar.com/api/1/deploy"
                        },
                        {
                          "name": "BODY",
                          "value": "{\n\t\t\"access_token\":   \"{{`{{ ssm \"${ parameters.rollbar_access_token_ssm_path }\" }}`}}\",\n\t\t\"environment\":    \"intuit_staging\",\n\t\t\"local_username\": \"${ trigger.user }\",\n\t\t\"revision\":       \"${ parameters.sha }\",\n\t\t\"status\":         \"succeeded\"\n\t}"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-west-2"
                        },
                        {
                          "name": "ASSUME_ROLE",
                          "value": "SpinnakerManagedRole"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "527291094460"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/notifier:latest",
                      "name": "notifier"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Publish to Rollbar (succeeded)",
          "refId": "rollbar_succeeded",
          "requisiteStageRefIds": [
            "deploy_aws_redblack"
          ],
          "source": "text",
          "stageEnabled": {
            "expression": "parameters.rollbar_access_token_ssm_path != ''",
            "type": "expression"
          },
          "stageTimeoutMs": 60000,
          "type": "runJobManifest",
          "waitForCompletion": true
        }
      ],
      "triggers": null
    },
    {
      "appConfig": {},
      "application": "gonfalon",
      "expectedArtifacts": [],
      "keepWaitingPipelines": false,
      "limitConcurrent": true,
      "name": "gonfalon-web - production",
      "notifications": [
        {
          "address": "eng-deploys",
          "level": "pipeline",
          "type": "slack",
          "when": [
            "pipeline.failed"
          ]
        },
        {
          "address": "ops-deploy-alerts",
          "level": "pipeline",
          "type": "slack",
          "when": [
            "pipeline.failed"
          ]
        },
        {
          "address": "gonfalon-drift-email.oqd3r7nr@launchdarkly.pagerduty.com",
          "level": "pipeline",
          "type": "email",
          "when": [
            "pipeline.failed"
          ]
        }
      ],
      "parameterConfig": [
        {
          "name": "sha",
          "description": "Artifact SHA to deploy",
          "hasOptions": false,
          "label": "Artifact SHA to deploy",
          "required": true,
          "default": ""
        },
        {
          "name": "ec2_instance_type",
          "description": "EC2 instance type",
          "hasOptions": true,
          "label": "EC2 instance type",
          "required": true,
          "options": [
            {
              "value": "m5a.xlarge"
            },
            {
              "value": "m5a.2xlarge"
            }
          ],
          "default": "m5a.xlarge"
        },
        {
          "name": "base_ami_name_prefix",
          "description": "Prefix for the base AMI name",
          "hasOptions": false,
          "label": "Prefix for the base AMI name",
          "required": true,
          "default": "ld-"
        },
        {
          "name": "rollbar_access_token_ssm_path",
          "description": "Rollbar Access Token SSM Path",
          "hasOptions": false,
          "label": "",
          "required": false,
          "default": "/global/services/gonfalon/rollbar_token"
        },
        {
          "name": "sleuth_api_key_ssm_path",
          "description": "Sleuth Api Key SSM Path",
          "hasOptions": false,
          "label": "",
          "required": false,
          "default": "/global/services/sleuth/api_key"
        },
        {
          "name": "honeycomb_api_key_ssm_path",
          "description": "Honeycomb Api Key SSM Path",
          "hasOptions": false,
          "label": "",
          "required": false,
          "default": "/production/common/services/honeycomb/write_key"
        }
      ],
      "stages": [
        {
          "continuePipeline": true,
          "customHeaders": {
            "X-LD-Private": "allowed"
          },
          "failPipeline": false,
          "method": "GET",
          "name": "Determine current version",
          "overrideTimeout": true,
          "refId": "determine_deployed_app_version",
          "requisiteStageRefIds": [],
          "stageTimeoutMs": 60000,
          "type": "webhook",
          "url": "https://gonfalon-internal.prod.launchdarkly.com/api/status"
        },
        {
          "method": "POST",
          "name": "Seek #eng-deploys deploy approval",
          "overrideTimeout": true,
          "payload": {
            "channel": "#eng-deploys",
            "text": "${ trigger.user } wants to :deploying: gonfalon-web - production with version ${ parameters['sha'] }.\nSHA diff is: https://github.com/launchdarkly/gonfalon/compare/${ #stage('Determine current version')['status'].toString() == 'SUCCEEDED' ? #stage('Determine current version')['context']['webhook']['body']['version'] : 'unknown' }...${ parameters['sha'] } | See https://deploy.launchdarkly.com/#/applications/gonfalon/executions/${ execution.id } for more information.\n\n:thumbsup: / :thumbsdown:?"
          },
          "refId": "notification_deploy_waiting_for_approval_eng-deploys",
          "requisiteStageRefIds": [
            "determine_deployed_app_version"
          ],
          "stageEnabled": {
            "expression": "!(trigger['payload'] != null \u0026\u0026 trigger['payload']['status'] == 'thumbed')",
            "type": "expression"
          },
          "stageTimeoutMs": 60000,
          "type": "webhook",
          "url": "https://hooks.slack.com/services/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"
        },
        {
          "failPipeline": true,
          "instructions": "Deploying gonfalon-web - production with version ${ parameters['sha'] }. The diff is: https://github.com/launchdarkly/gonfalon/compare/${ #stage('Determine current version')['status'].toString() == 'SUCCEEDED' ? #stage('Determine current version')['context']['webhook']['body']['version'] : 'unknown' }...${ parameters['sha'] }",
          "judgmentInputs": [],
          "name": "Confirm that deploy should continue",
          "notifications": [
            {
              "address": "deploys",
              "level": "stage",
              "type": "slack",
              "when": [
                "manualJudgment",
                "manualJudgmentContinue",
                "manualJudgmentStop"
              ]
            }
          ],
          "overrideTimeout": true,
          "refId": "confirm_deployment",
          "requisiteStageRefIds": [
            "notification_deploy_waiting_for_approval_eng-deploys"
          ],
          "sendNotifications": true,
          "stageEnabled": {
            "expression": "!(trigger['payload'] != null \u0026\u0026 trigger['payload']['status'] == 'thumbed')",
            "type": "expression"
          },
          "stageTimeoutMs": 3600000,
          "type": "manualJudgment"
        },
        {
          "continuePipeline": true,
          "failPipeline": false,
          "method": "POST",
          "name": "Notify #ops-production deploy is happening",
          "overrideTimeout": true,
          "payload": {
            "channel": "#ops-production",
            "text": "${ trigger.user } is really :deploying: gonfalon-web - production with version ${ parameters.sha }. Follow progress at https://deploy.launchdarkly.com/#/applications/gonfalon/executions/${ execution.id } "
          },
          "refId": "notification_deploy_start_ops-production",
          "requisiteStageRefIds": [
            "confirm_deployment"
          ],
          "stageTimeoutMs": 60000,
          "type": "webhook",
          "url": "https://hooks.slack.com/services/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"
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "completeOtherBranchesThenFail": true,
          "continuePipeline": true,
          "credentials": "kubernetes",
          "failPipeline": false,
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "notifier",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "env": [
                        {
                          "name": "METHOD",
                          "value": "POST"
                        },
                        {
                          "name": "URL",
                          "value": "https://api.rollbar.com/api/1/deploy"
                        },
                        {
                          "name": "BODY",
                          "value": "{\n\t\t\"access_token\":   \"{{`{{ ssm \"${ parameters.rollbar_access_token_ssm_path }\" }}`}}\",\n\t\t\"environment\":    \"production\",\n\t\t\"local_username\": \"${ trigger.user }\",\n\t\t\"revision\":       \"${ parameters.sha }\",\n\t\t\"status\":         \"started\"\n\t}"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "ASSUME_ROLE",
                          "value": "SpinnakerManagedRole"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "554582317989"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/notifier:latest",
                      "name": "notifier"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Publish to Rollbar (started)",
          "refId": "rollbar_started",
          "requisiteStageRefIds": [
            "confirm_deployment"
          ],
          "source": "text",
          "stageEnabled": {
            "expression": "parameters.rollbar_access_token_ssm_path != ''",
            "type": "expression"
          },
          "stageTimeoutMs": 60000,
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "cloudProvider": "aws",
          "cloudProviderType": "aws",
          "name": "Lookup AMI ID for Baked Artifact AMI",
          "overrideTimeout": true,
          "packageName": "gonfalon-web-${ parameters.sha }*ubuntu",
          "refId": "lookup_baked_artifact_ami_id",
          "regions": [
            "us-east-1"
          ],
          "requisiteStageRefIds": [
            "determine_deployed_app_version",
            "notification_deploy_waiting_for_approval_eng-deploys",
            "confirm_deployment"
          ],
          "stageTimeoutMs": 60000,
          "tags": {},
          "type": "findImageFromTags"
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "run-db-migrations-coderefs-crdb",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "command": [
                        "/bin/run-migrations"
                      ],
                      "env": [
                        {
                          "name": "SHA",
                          "value": "${ parameters['sha'] }"
                        },
                        {
                          "name": "DATABASE",
                          "value": "coderefs-crdb"
                        },
                        {
                          "name": "ENV_SHORT_NAME",
                          "value": "production"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "554582317989"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/mild:latest",
                      "name": "run-migrations"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Run DB migrations for coderefs-crdb",
          "refId": "run_db_migrations_coderefs-crdb",
          "requisiteStageRefIds": [
            "lookup_baked_artifact_ami_id"
          ],
          "source": "text",
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "run-db-migrations-oauth2-crdb",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "command": [
                        "/bin/run-migrations"
                      ],
                      "env": [
                        {
                          "name": "SHA",
                          "value": "${ parameters['sha'] }"
                        },
                        {
                          "name": "DATABASE",
                          "value": "oauth2-crdb"
                        },
                        {
                          "name": "ENV_SHORT_NAME",
                          "value": "production"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "554582317989"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/mild:latest",
                      "name": "run-migrations"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Run DB migrations for oauth2-crdb",
          "refId": "run_db_migrations_oauth2-crdb",
          "requisiteStageRefIds": [
            "lookup_baked_artifact_ami_id"
          ],
          "source": "text",
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "run-db-migrations-accounts-crdb",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "command": [
                        "/bin/run-migrations"
                      ],
                      "env": [
                        {
                          "name": "SHA",
                          "value": "${ parameters['sha'] }"
                        },
                        {
                          "name": "DATABASE",
                          "value": "accounts-crdb"
                        },
                        {
                          "name": "ENV_SHORT_NAME",
                          "value": "production"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "554582317989"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/mild:latest",
                      "name": "run-migrations"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Run DB migrations for accounts-crdb",
          "refId": "run_db_migrations_accounts-crdb",
          "requisiteStageRefIds": [
            "lookup_baked_artifact_ami_id"
          ],
          "source": "text",
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "run-db-migrations-gonfalon-accounts-crdb",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "command": [
                        "/bin/run-migrations"
                      ],
                      "env": [
                        {
                          "name": "SHA",
                          "value": "${ parameters['sha'] }"
                        },
                        {
                          "name": "DATABASE",
                          "value": "gonfalon-accounts-crdb"
                        },
                        {
                          "name": "ENV_SHORT_NAME",
                          "value": "production"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "554582317989"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/mild:latest",
                      "name": "run-migrations"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Run DB migrations for gonfalon-accounts-crdb",
          "refId": "run_db_migrations_gonfalon-accounts-crdb",
          "requisiteStageRefIds": [
            "lookup_baked_artifact_ami_id"
          ],
          "source": "text",
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "run-db-migrations-gonfalon-billing-crdb",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "command": [
                        "/bin/run-migrations"
                      ],
                      "env": [
                        {
                          "name": "SHA",
                          "value": "${ parameters['sha'] }"
                        },
                        {
                          "name": "DATABASE",
                          "value": "gonfalon-billing-crdb"
                        },
                        {
                          "name": "ENV_SHORT_NAME",
                          "value": "production"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "554582317989"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/mild:latest",
                      "name": "run-migrations"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Run DB migrations for gonfalon-billing-crdb",
          "refId": "run_db_migrations_gonfalon-billing-crdb",
          "requisiteStageRefIds": [
            "lookup_baked_artifact_ami_id"
          ],
          "source": "text",
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "run-db-migrations-gonfalon-file-jobs-crdb",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "command": [
                        "/bin/run-migrations"
                      ],
                      "env": [
                        {
                          "name": "SHA",
                          "value": "${ parameters['sha'] }"
                        },
                        {
                          "name": "DATABASE",
                          "value": "gonfalon-file-jobs-crdb"
                        },
                        {
                          "name": "ENV_SHORT_NAME",
                          "value": "production"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "554582317989"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/mild:latest",
                      "name": "run-migrations"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Run DB migrations for gonfalon-file-jobs-crdb",
          "refId": "run_db_migrations_gonfalon-file-jobs-crdb",
          "requisiteStageRefIds": [
            "lookup_baked_artifact_ami_id"
          ],
          "source": "text",
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "run-db-migrations-gonfalon-integrations-crdb",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "command": [
                        "/bin/run-migrations"
                      ],
                      "env": [
                        {
                          "name": "SHA",
                          "value": "${ parameters['sha'] }"
                        },
                        {
                          "name": "DATABASE",
                          "value": "gonfalon-integrations-crdb"
                        },
                        {
                          "name": "ENV_SHORT_NAME",
                          "value": "production"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "554582317989"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/mild:latest",
                      "name": "run-migrations"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Run DB migrations for gonfalon-integrations-crdb",
          "refId": "run_db_migrations_gonfalon-integrations-crdb",
          "requisiteStageRefIds": [
            "lookup_baked_artifact_ami_id"
          ],
          "source": "text",
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "run-db-migrations-gonfalon-workflows-crdb",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "command": [
                        "/bin/run-migrations"
                      ],
                      "env": [
                        {
                          "name": "SHA",
                          "value": "${ parameters['sha'] }"
                        },
                        {
                          "name": "DATABASE",
                          "value": "gonfalon-workflows-crdb"
                        },
                        {
                          "name": "ENV_SHORT_NAME",
                          "value": "production"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "554582317989"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/mild:latest",
                      "name": "run-migrations"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Run DB migrations for gonfalon-workflows-crdb",
          "refId": "run_db_migrations_gonfalon-workflows-crdb",
          "requisiteStageRefIds": [
            "lookup_baked_artifact_ami_id"
          ],
          "source": "text",
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "run-db-migrations-gonfalon-experimentation-crdb",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "command": [
                        "/bin/run-migrations"
                      ],
                      "env": [
                        {
                          "name": "SHA",
                          "value": "${ parameters['sha'] }"
                        },
                        {
                          "name": "DATABASE",
                          "value": "gonfalon-experimentation-crdb"
                        },
                        {
                          "name": "ENV_SHORT_NAME",
                          "value": "production"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "554582317989"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/mild:latest",
                      "name": "run-migrations"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Run DB migrations for gonfalon-experimentation-crdb",
          "refId": "run_db_migrations_gonfalon-experimentation-crdb",
          "requisiteStageRefIds": [
            "lookup_baked_artifact_ami_id"
          ],
          "source": "text",
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "clusters": [
            {
              "account": "launchdarkly-production",
              "application": "gonfalon",
              "associatePublicIpAddress": false,
              "availabilityZones": {
                "us-east-1": [
                  "us-east-1a",
                  "us-east-1b",
                  "us-east-1c"
                ]
              },
              "base64UserData": "",
              "capacity": {
                "desired": 2,
                "max": 2,
                "min": 2
              },
              "cloudProvider": "aws",
              "cooldown": 120,
              "copySourceCustomBlockDeviceMappings": false,
              "delayBeforeDisableSec": 60,
              "delayBeforeScaleDownSec": 1800,
              "dirty": {},
              "ebsOptimized": false,
              "enabledMetrics": [
                "GroupMinSize",
                "GroupMaxSize",
                "GroupDesiredCapacity",
                "GroupInServiceInstances",
                "GroupPendingInstances",
                "GroupStandbyInstances",
                "GroupTerminatingInstances",
                "GroupTotalInstances"
              ],
              "freeFormDetails": "ld-prod",
              "healthCheckGracePeriod": 240,
              "healthCheckType": "ELB",
              "iamRole": "production-gonfalon",
              "instanceMonitoring": true,
              "instanceType": "${ parameters.ec2_instance_type }",
              "keyPair": "ld_shared",
              "launchTemplateOverridesForInstanceType": null,
              "loadBalancers": [],
              "maxRemainingAsgs": 2,
              "moniker": {
                "app": "gonfalon",
                "detail": "ld-prod",
                "stack": "web"
              },
              "preferSourceCapacity": true,
              "provider": "aws",
              "rollback": {
                "onFailure": true
              },
              "scaleDown": true,
              "securityGroups": [
                "sg-c1194aa5",
                "sg-d94f90ae",
                "sg-bdc1dbc2",
                "sg-b016fcd6",
                "sg-8e07b8c7",
                "sg-0210f16374948f868",
                "sg-0c4b952a1832d9abd",
                "sg-01c31bcefc5ffffa7",
                "sg-01b4a9c94632dcff1",
                "sg-07776fab78e8e27a3",
                "sg-03fdb07d91305fac6",
                "sg-04a1a4525abd517df",
                "sg-01391d5e3467d75d0",
                "sg-05bf7e2740de149d9"
              ],
              "setLaunchTemplate": false,
              "spelLoadBalancers": [],
              "spelTargetGroups": [],
              "spotPrice": "",
              "stack": "web",
              "strategy": "redblack",
              "subnetType": "launchdarkly-private-subnet",
              "suspendedProcesses": [],
              "tags": {
                "Name": "gonfalon-web (production)",
                "dogfoodCanary": "false",
                "env": "production",
                "environment": "production",
                "managed_by": "spinnaker",
                "owner": "common",
                "region": "us-east-1",
                "role": "gonfalon-web",
                "service": "app.launchdarkly.com",
                "sha": "${ parameters.sha }",
                "tier": "production"
              },
              "targetGroups": [
                "gonfalon-web-ld-prod",
                "gonfalon-web-internal-ld-prod"
              ],
              "targetHealthyDeployPercentage": 100,
              "terminationPolicies": [
                "Default"
              ],
              "useAmiBlockDeviceMappings": true,
              "useSourceCapacity": true
            },
            {
              "account": "launchdarkly-production",
              "application": "gonfalon",
              "associatePublicIpAddress": false,
              "availabilityZones": {
                "us-east-1": [
                  "us-east-1a"
                ]
              },
              "base64UserData": "",
              "capacity": {
                "desired": 1,
                "max": 1,
                "min": 1
              },
              "cloudProvider": "aws",
              "cooldown": 120,
              "copySourceCustomBlockDeviceMappings": false,
              "delayBeforeDisableSec": 60,
              "delayBeforeScaleDownSec": 1800,
              "dirty": {},
              "ebsOptimized": false,
              "enabledMetrics": [
                "GroupMinSize",
                "GroupMaxSize",
                "GroupDesiredCapacity",
                "GroupInServiceInstances",
                "GroupPendingInstances",
                "GroupStandbyInstances",
                "GroupTerminatingInstances",
                "GroupTotalInstances"
              ],
              "freeFormDetails": "ld-prod-dogfood-canary",
              "healthCheckGracePeriod": 240,
              "healthCheckType": "ELB",
              "iamRole": "production-gonfalon",
              "instanceMonitoring": true,
              "instanceType": "${ parameters.ec2_instance_type }",
              "keyPair": "ld_shared",
              "launchTemplateOverridesForInstanceType": null,
              "loadBalancers": [],
              "maxRemainingAsgs": 2,
              "moniker": {
                "app": "gonfalon",
                "detail": "ld-prod",
                "stack": "web"
              },
              "preferSourceCapacity": true,
              "provider": "aws",
              "rollback": {
                "onFailure": true
              },
              "scaleDown": true,
              "securityGroups": [
                "sg-c1194aa5",
                "sg-d94f90ae",
                "sg-bdc1dbc2",
                "sg-b016fcd6",
                "sg-8e07b8c7",
                "sg-0210f16374948f868",
                "sg-0c4b952a1832d9abd",
                "sg-01c31bcefc5ffffa7",
                "sg-01b4a9c94632dcff1",
                "sg-07776fab78e8e27a3",
                "sg-03fdb07d91305fac6",
                "sg-04a1a4525abd517df",
                "sg-01391d5e3467d75d0",
                "sg-05bf7e2740de149d9"
              ],
              "setLaunchTemplate": false,
              "spelLoadBalancers": [],
              "spelTargetGroups": [],
              "spotPrice": "",
              "stack": "web",
              "strategy": "redblack",
              "subnetType": "launchdarkly-private-subnet",
              "suspendedProcesses": [],
              "tags": {
                "Name": "gonfalon-web (production)",
                "dogfoodCanary": "true",
                "env": "production",
                "environment": "production",
                "managed_by": "spinnaker",
                "owner": "common",
                "region": "us-east-1",
                "role": "gonfalon-web",
                "service": "app.launchdarkly.com",
                "sha": "${ parameters.sha }",
                "tier": "production"
              },
              "targetGroups": [
                "gonfalon-web-ld-prod",
                "gonfalon-web-internal-ld-prod"
              ],
              "targetHealthyDeployPercentage": 100,
              "terminationPolicies": [
                "Default"
              ],
              "useAmiBlockDeviceMappings": true,
              "useSourceCapacity": true
            }
          ],
          "customSubject": "Deployed gonfalon-web-${ parameters['sha'] } to production",
          "name": "Deploy application to AWS",
          "notifications": [
            {
              "address": "changelog-production@launchdarkly.com",
              "level": "stage",
              "message": {
                "stage.complete": {
                  "text": "Details: Deployed gonfalon-web-${ parameters['sha'] } to production.  The diff is: https://github.com/launchdarkly/gonfalon/compare/${ #stage('Determine current version')['status'].toString() == 'SUCCEEDED' ? #stage('Determine current version')['context']['webhook']['body']['version'] : 'unknown' }...${ parameters['sha'] }\n\n!production !deploy\n\nWho: ${ trigger['user'] } via ${ trigger['type'] } trigger\n\nTopic: gonfalon-web\n\nWhen: ${ new java.text.SimpleDateFormat('EEE MMM d HH:mm:ss z YYYY').format(new java.util.Date())}\n\n"
                }
              },
              "type": "email",
              "when": [
                "stage.complete"
              ]
            }
          ],
          "overrideTimeout": true,
          "refId": "deploy_aws_redblack",
          "requisiteStageRefIds": [
            "lookup_baked_artifact_ami_id",
            "run_db_migrations_coderefs-crdb",
            "run_db_migrations_oauth2-crdb",
            "run_db_migrations_accounts-crdb",
            "run_db_migrations_gonfalon-accounts-crdb",
            "run_db_migrations_gonfalon-billing-crdb",
            "run_db_migrations_gonfalon-file-jobs-crdb",
            "run_db_migrations_gonfalon-integrations-crdb",
            "run_db_migrations_gonfalon-workflows-crdb",
            "run_db_migrations_gonfalon-experimentation-crdb"
          ],
          "sendNotifications": true,
          "stageTimeoutMs": 7200000,
          "type": "deploy"
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "completeOtherBranchesThenFail": true,
          "continuePipeline": true,
          "credentials": "kubernetes",
          "failPipeline": false,
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "notifier",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "env": [
                        {
                          "name": "METHOD",
                          "value": "POST"
                        },
                        {
                          "name": "URL",
                          "value": "https://app.sleuth.io/api/1/deployments/launchdarkly/gonfalon-web/register_deploy?ignore_if_duplicate=true"
                        },
                        {
                          "name": "BODY",
                          "value": ""
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "FORM_api_key",
                          "value": "{{`{{ ssm \"${ parameters.sleuth_api_key_ssm_path }\" }}`}}"
                        },
                        {
                          "name": "FORM_environment",
                          "value": "production"
                        },
                        {
                          "name": "FORM_sha",
                          "value": "${ parameters.sha }"
                        },
                        {
                          "name": "ASSUME_ROLE",
                          "value": "SpinnakerManagedRole"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "554582317989"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/notifier:latest",
                      "name": "notifier"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Publish to Sleuth",
          "refId": "sleuth_publish",
          "requisiteStageRefIds": [
            "deploy_aws_redblack"
          ],
          "source": "text",
          "stageEnabled": {
            "expression": "sleuth_api_key_ssm_path != ''",
            "type": "expression"
          },
          "stageTimeoutMs": 60000,
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "completeOtherBranchesThenFail": true,
          "continuePipeline": true,
          "credentials": "kubernetes",
          "failPipeline": false,
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "notifier",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "env": [
                        {
                          "name": "METHOD",
                          "value": "POST"
                        },
                        {
                          "name": "URL",
                          "value": "https://api.honeycomb.io/1/markers/production"
                        },
                        {
                          "name": "BODY",
                          "value": "{\n\t\t\"message\" : \"gonfalon - production - Deployment - sha: ${ parameters.sha }\",\n\t\t\"type\":\"deploy\"\n\t}"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "ASSUME_ROLE",
                          "value": "SpinnakerManagedRole"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "554582317989"
                        },
                        {
                          "name": "HEADER_Accept",
                          "value": "application/json"
                        },
                        {
                          "name": "HEADER_Content_Type",
                          "value": "application/json"
                        },
                        {
                          "name": "HEADER_X_Honeycomb_Team",
                          "value": "{{`{{ ssm \"${ parameters.honeycomb_api_key_ssm_path }\" }}`}}"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/notifier:latest",
                      "name": "notifier"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Publish to Honeycomb",
          "refId": "honeycomb_publish",
          "requisiteStageRefIds": [
            "deploy_aws_redblack"
          ],
          "source": "text",
          "stageEnabled": {
            "expression": "honeycomb_api_key_ssm_path != ''",
            "type": "expression"
          },
          "stageTimeoutMs": 60000,
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "failPipeline": false,
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "notifier",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "env": [
                        {
                          "name": "METHOD",
                          "value": "POST"
                        },
                        {
                          "name": "URL",
                          "value": "https://app.ld.catamorphic.com/api/v2/accelerate/deployment-events"
                        },
                        {
                          "name": "BODY",
                          "value": "{\n  \"environmentKey\": \"production\",\n  \"eventType\": \"started\",\n  \"projectKey\": \"default\",\n  \"service\": \"gonfalon\",\n  \"version\": \"${ parameters.sha }\"\n}"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "HEADER_Authorization",
                          "value": "{{`{{ ssm \"/shared-services/common/services/accelerate/ld_api_key\" }}`}}"
                        },
                        {
                          "name": "HEADER_Content_Type",
                          "value": "application/json"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/notifier:latest",
                      "name": "notifier"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Send Accelerate started notification",
          "refId": "accelerate_started",
          "requisiteStageRefIds": [
            "determine_deployed_app_version"
          ],
          "source": "text",
          "stageEnabled": {
            "expression": "",
            "type": "expression"
          },
          "stageTimeoutMs": 60000,
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "failPipeline": false,
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "notifier",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "env": [
                        {
                          "name": "METHOD",
                          "value": "POST"
                        },
                        {
                          "name": "URL",
                          "value": "https://app.ld.catamorphic.com/api/v2/accelerate/deployment-events"
                        },
                        {
                          "name": "BODY",
                          "value": "{\n  \"environmentKey\": \"production\",\n  \"eventType\": \"finished\",\n  \"projectKey\": \"default\",\n  \"service\": \"gonfalon\",\n  \"version\": \"${ parameters.sha }\"\n}"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "HEADER_Authorization",
                          "value": "{{`{{ ssm \"/shared-services/common/services/accelerate/ld_api_key\" }}`}}"
                        },
                        {
                          "name": "HEADER_Content_Type",
                          "value": "application/json"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/notifier:latest",
                      "name": "notifier"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Send Accelerate finished notification",
          "refId": "accelerate_finished",
          "requisiteStageRefIds": [
            "deploy_aws_redblack"
          ],
          "source": "text",
          "stageEnabled": {
            "expression": "",
            "type": "expression"
          },
          "stageTimeoutMs": 60000,
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "failPipeline": false,
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "notifier",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "env": [
                        {
                          "name": "METHOD",
                          "value": "POST"
                        },
                        {
                          "name": "URL",
                          "value": "https://zepq2yt1c5.execute-api.us-east-1.amazonaws.com/beta/cleanup"
                        },
                        {
                          "name": "BODY",
                          "value": "{\n\t\"repoName\": \"gonfalon\",\n\t\"startSHA\": \"${ #stage('Determine current version')['status'].toString() == 'SUCCEEDED' ? #stage('Determine current version')['context']['webhook']['body']['version'] : 'unknown' }\",\n\t\"endSHA\": \"${ trigger['parameters']['sha'] }\"\n}"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "HEADER_Authorization",
                          "value": "{{`{{ ssm \"/global/services/cloubhouse_cleanup/authorization_key\" }}`}}"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/notifier:latest",
                      "name": "notifier"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Close related Clubhouse issues",
          "refId": "clubhouse",
          "requisiteStageRefIds": [
            "deploy_aws_redblack"
          ],
          "source": "text",
          "stageEnabled": {
            "expression": "",
            "type": "expression"
          },
          "stageTimeoutMs": 60000,
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "failPipeline": false,
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "notifier",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "env": [
                        {
                          "name": "METHOD",
                          "value": "POST"
                        },
                        {
                          "name": "URL",
                          "value": "https://calibreapp.com/api/sites/launchdarkly-front-end-perf/deploys"
                        },
                        {
                          "name": "BODY",
                          "value": "{\n\t\t\"secret\": \"{{`{{ ssm \"/shared-services/us-east-1/applications/spinnaker/gonfalon_production_calibre_site_secret\" }}`}}\",\n\t\t\"revision\": \"${ parameters.sha }\"\n\t}"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "HEADER_Accept",
                          "value": "application/json"
                        },
                        {
                          "name": "HEADER_Content_Type",
                          "value": "application/json"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/notifier:latest",
                      "name": "notifier"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Post deploy to Calibre",
          "refId": "calibre",
          "requisiteStageRefIds": [
            "deploy_aws_redblack"
          ],
          "source": "text",
          "stageEnabled": {
            "expression": "",
            "type": "expression"
          },
          "stageTimeoutMs": 60000,
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "continuePipeline": true,
          "credentials": "kubernetes",
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "run-redocly-deploy",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "env": [
                        {
                          "name": "REDOCLY_API_TOKEN_SSM_PATH",
                          "value": "/production/common/services/apidocs/redocly_api_key"
                        },
                        {
                          "name": "OPENAPI_VERSION",
                          "value": "20191212"
                        },
                        {
                          "name": "REDOCLY_REGISTRY",
                          "value": "LaunchDarkly Production"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/redocly-deploy:latest",
                      "name": "redocly-deploy"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Run Deploy API Docs",
          "refId": "deploy_redocly",
          "requisiteStageRefIds": [
            "deploy_aws_redblack"
          ],
          "source": "text",
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "continuePipeline": true,
          "failPipeline": false,
          "method": "POST",
          "name": "Notify #ops-production deploy finished",
          "overrideTimeout": true,
          "payload": {
            "channel": "#ops-production",
            "text": "${ trigger.user } is done deploying gonfalon-web - production with version ${ parameters.sha }. Check it out!"
          },
          "refId": "notification_deploy_finish_ops-production",
          "requisiteStageRefIds": [
            "deploy_aws_redblack",
            "sleuth_publish",
            "honeycomb_publish",
            "clubhouse",
            "calibre",
            "deploy_redocly"
          ],
          "stageTimeoutMs": 60000,
          "type": "webhook",
          "url": "https://hooks.slack.com/services/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"
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "completeOtherBranchesThenFail": true,
          "continuePipeline": true,
          "credentials": "kubernetes",
          "failPipeline": false,
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "notifier",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "env": [
                        {
                          "name": "METHOD",
                          "value": "POST"
                        },
                        {
                          "name": "URL",
                          "value": "https://api.rollbar.com/api/1/deploy"
                        },
                        {
                          "name": "BODY",
                          "value": "{\n\t\t\"access_token\":   \"{{`{{ ssm \"${ parameters.rollbar_access_token_ssm_path }\" }}`}}\",\n\t\t\"environment\":    \"production\",\n\t\t\"local_username\": \"${ trigger.user }\",\n\t\t\"revision\":       \"${ parameters.sha }\",\n\t\t\"status\":         \"succeeded\"\n\t}"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "ASSUME_ROLE",
                          "value": "SpinnakerManagedRole"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "554582317989"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/notifier:latest",
                      "name": "notifier"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Publish to Rollbar (succeeded)",
          "refId": "rollbar_succeeded",
          "requisiteStageRefIds": [
            "deploy_aws_redblack"
          ],
          "source": "text",
          "stageEnabled": {
            "expression": "parameters.rollbar_access_token_ssm_path != ''",
            "type": "expression"
          },
          "stageTimeoutMs": 60000,
          "type": "runJobManifest",
          "waitForCompletion": true
        }
      ],
      "triggers": [
        {
          "enabled": true,
          "expectedArtifactIds": [],
          "payloadConstraints": {
            "status": "thumbed"
          },
          "runAsUser": "api-service-account@launchdarkly.com",
          "source": "01d08837-5c1f-4f6e-acbd-a6bbb992e352",
          "type": "webhook"
        }
      ]
    },
    {
      "appConfig": {},
      "application": "gonfalon",
      "expectedArtifacts": [],
      "keepWaitingPipelines": false,
      "limitConcurrent": true,
      "name": "gonfalon-web - staging",
      "notifications": [
        {
          "address": "gonfalon",
          "level": "pipeline",
          "type": "slack",
          "when": [
            "pipeline.failed"
          ]
        },
        {
          "address": "eng-deploys",
          "level": "pipeline",
          "type": "slack",
          "when": [
            "pipeline.failed"
          ]
        },
        {
          "address": "ops-deploy-alerts",
          "level": "pipeline",
          "type": "slack",
          "when": [
            "pipeline.failed"
          ]
        },
        {
          "address": "gonfalon-drift-email.oqd3r7nr@launchdarkly.pagerduty.com",
          "level": "pipeline",
          "type": "email",
          "when": [
            "pipeline.failed"
          ]
        }
      ],
      "parameterConfig": [
        {
          "name": "sha",
          "description": "Artifact SHA to deploy",
          "hasOptions": false,
          "label": "Artifact SHA to deploy",
          "required": true,
          "default": ""
        },
        {
          "name": "ec2_instance_type",
          "description": "EC2 instance type",
          "hasOptions": true,
          "label": "EC2 instance type",
          "required": true,
          "options": [
            {
              "value": "m5a.xlarge"
            },
            {
              "value": "m5a.2xlarge"
            }
          ],
          "default": "m5a.xlarge"
        },
        {
          "name": "base_ami_name_prefix",
          "description": "Prefix for the base AMI name",
          "hasOptions": false,
          "label": "Prefix for the base AMI name",
          "required": true,
          "default": "ld-"
        },
        {
          "name": "rollbar_access_token_ssm_path",
          "description": "Rollbar Access Token SSM Path",
          "hasOptions": false,
          "label": "",
          "required": false,
          "default": "/global/services/gonfalon/rollbar_token"
        },
        {
          "name": "sleuth_api_key_ssm_path",
          "description": "Sleuth Api Key SSM Path",
          "hasOptions": false,
          "label": "",
          "required": false,
          "default": "/global/services/sleuth/api_key"
        },
        {
          "name": "honeycomb_api_key_ssm_path",
          "description": "Honeycomb Api Key SSM Path",
          "hasOptions": false,
          "label": "",
          "required": false,
          "default": "/staging/common/services/honeycomb/write_key"
        }
      ],
      "stages": [
        {
          "continuePipeline": true,
          "customHeaders": {
            "X-LD-Private": "allowed"
          },
          "failPipeline": false,
          "method": "GET",
          "name": "Determine current version",
          "overrideTimeout": true,
          "refId": "determine_deployed_app_version",
          "requisiteStageRefIds": [],
          "stageTimeoutMs": 60000,
          "type": "webhook",
          "url": "https://gonfalon-internal.stg.launchdarkly.com/api/status"
        },
        {
          "continuePipeline": true,
          "failPipeline": false,
          "method": "POST",
          "name": "Notify #ops-staging deploy is happening",
          "overrideTimeout": true,
          "payload": {
            "channel": "#ops-staging",
            "text": "${ trigger.user } is really :deploying: gonfalon-web - staging with version ${ parameters.sha }. Follow progress at https://deploy.launchdarkly.com/#/applications/gonfalon/executions/${ execution.id } "
          },
          "refId": "notification_deploy_start_ops-staging",
          "requisiteStageRefIds": [
            "determine_deployed_app_version"
          ],
          "stageTimeoutMs": 60000,
          "type": "webhook",
          "url": "https://hooks.slack.com/services/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"
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "completeOtherBranchesThenFail": true,
          "continuePipeline": true,
          "credentials": "kubernetes",
          "failPipeline": false,
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "notifier",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "env": [
                        {
                          "name": "METHOD",
                          "value": "POST"
                        },
                        {
                          "name": "URL",
                          "value": "https://api.rollbar.com/api/1/deploy"
                        },
                        {
                          "name": "BODY",
                          "value": "{\n\t\t\"access_token\":   \"{{`{{ ssm \"${ parameters.rollbar_access_token_ssm_path }\" }}`}}\",\n\t\t\"environment\":    \"staging\",\n\t\t\"local_username\": \"${ trigger.user }\",\n\t\t\"revision\":       \"${ parameters.sha }\",\n\t\t\"status\":         \"started\"\n\t}"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "ASSUME_ROLE",
                          "value": "SpinnakerManagedRole"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "554582317989"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/notifier:latest",
                      "name": "notifier"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Publish to Rollbar (started)",
          "refId": "rollbar_started",
          "requisiteStageRefIds": [
            "determine_deployed_app_version"
          ],
          "source": "text",
          "stageEnabled": {
            "expression": "parameters.rollbar_access_token_ssm_path != ''",
            "type": "expression"
          },
          "stageTimeoutMs": 60000,
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "amiName": "gonfalon-web-${ parameters.sha }",
          "baseLabel": "release",
          "baseOs": "ubuntu",
          "cloudProviderType": "aws",
          "extendedAttributes": {
            "app_name": "gonfalon",
            "app_type": "web",
            "aws_ami_owners": "061661829416",
            "aws_ami_users": "554582317989,506919356135,527291094460",
            "aws_encrypt_boot": "false",
            "aws_kms_key_id": "",
            "aws_source_ami_filter": "${ parameters.base_ami_name_prefix }gonfalon-base-ami*",
            "environment": "staging",
            "iam_instance_profile": "SpinnakerPackerInstanceProfile",
            "os": "ubuntu",
            "s3_artifact_bucket": "launchdarkly-artifacts",
            "sha": "${ parameters.sha }"
          },
          "name": "Bake Multi-Region AMI",
          "package": "gonfalon-web-${ parameters.sha }",
          "rebake": false,
          "refId": "bake_multi_region_ami",
          "regions": [
            "us-east-1",
            "us-east-2",
            "us-west-2"
          ],
          "requisiteStageRefIds": [
            "determine_deployed_app_version"
          ],
          "stageTimeoutMs": 2700000,
          "storeType": "ebs",
          "templateFileName": "aws-launchdarkly-filter.json",
          "type": "bake",
          "user": "[anonymous]",
          "vmType": "hvm"
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "run-db-migrations-coderefs-crdb",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "command": [
                        "/bin/run-migrations"
                      ],
                      "env": [
                        {
                          "name": "SHA",
                          "value": "${ parameters['sha'] }"
                        },
                        {
                          "name": "DATABASE",
                          "value": "coderefs-crdb"
                        },
                        {
                          "name": "ENV_SHORT_NAME",
                          "value": "staging"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "554582317989"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/mild:latest",
                      "name": "run-migrations"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Run DB migrations for coderefs-crdb",
          "refId": "run_db_migrations_coderefs-crdb",
          "requisiteStageRefIds": [
            "bake_multi_region_ami"
          ],
          "source": "text",
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "run-db-migrations-oauth2-crdb",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "command": [
                        "/bin/run-migrations"
                      ],
                      "env": [
                        {
                          "name": "SHA",
                          "value": "${ parameters['sha'] }"
                        },
                        {
                          "name": "DATABASE",
                          "value": "oauth2-crdb"
                        },
                        {
                          "name": "ENV_SHORT_NAME",
                          "value": "staging"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "554582317989"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/mild:latest",
                      "name": "run-migrations"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Run DB migrations for oauth2-crdb",
          "refId": "run_db_migrations_oauth2-crdb",
          "requisiteStageRefIds": [
            "bake_multi_region_ami"
          ],
          "source": "text",
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "run-db-migrations-accounts-crdb",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "command": [
                        "/bin/run-migrations"
                      ],
                      "env": [
                        {
                          "name": "SHA",
                          "value": "${ parameters['sha'] }"
                        },
                        {
                          "name": "DATABASE",
                          "value": "accounts-crdb"
                        },
                        {
                          "name": "ENV_SHORT_NAME",
                          "value": "staging"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "554582317989"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/mild:latest",
                      "name": "run-migrations"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Run DB migrations for accounts-crdb",
          "refId": "run_db_migrations_accounts-crdb",
          "requisiteStageRefIds": [
            "bake_multi_region_ami"
          ],
          "source": "text",
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "run-db-migrations-gonfalon-accounts-crdb",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "command": [
                        "/bin/run-migrations"
                      ],
                      "env": [
                        {
                          "name": "SHA",
                          "value": "${ parameters['sha'] }"
                        },
                        {
                          "name": "DATABASE",
                          "value": "gonfalon-accounts-crdb"
                        },
                        {
                          "name": "ENV_SHORT_NAME",
                          "value": "staging"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "554582317989"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/mild:latest",
                      "name": "run-migrations"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Run DB migrations for gonfalon-accounts-crdb",
          "refId": "run_db_migrations_gonfalon-accounts-crdb",
          "requisiteStageRefIds": [
            "bake_multi_region_ami"
          ],
          "source": "text",
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "run-db-migrations-gonfalon-billing-crdb",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "command": [
                        "/bin/run-migrations"
                      ],
                      "env": [
                        {
                          "name": "SHA",
                          "value": "${ parameters['sha'] }"
                        },
                        {
                          "name": "DATABASE",
                          "value": "gonfalon-billing-crdb"
                        },
                        {
                          "name": "ENV_SHORT_NAME",
                          "value": "staging"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "554582317989"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/mild:latest",
                      "name": "run-migrations"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Run DB migrations for gonfalon-billing-crdb",
          "refId": "run_db_migrations_gonfalon-billing-crdb",
          "requisiteStageRefIds": [
            "bake_multi_region_ami"
          ],
          "source": "text",
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "run-db-migrations-gonfalon-file-jobs-crdb",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "command": [
                        "/bin/run-migrations"
                      ],
                      "env": [
                        {
                          "name": "SHA",
                          "value": "${ parameters['sha'] }"
                        },
                        {
                          "name": "DATABASE",
                          "value": "gonfalon-file-jobs-crdb"
                        },
                        {
                          "name": "ENV_SHORT_NAME",
                          "value": "staging"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "554582317989"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/mild:latest",
                      "name": "run-migrations"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Run DB migrations for gonfalon-file-jobs-crdb",
          "refId": "run_db_migrations_gonfalon-file-jobs-crdb",
          "requisiteStageRefIds": [
            "bake_multi_region_ami"
          ],
          "source": "text",
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "run-db-migrations-gonfalon-integrations-crdb",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "command": [
                        "/bin/run-migrations"
                      ],
                      "env": [
                        {
                          "name": "SHA",
                          "value": "${ parameters['sha'] }"
                        },
                        {
                          "name": "DATABASE",
                          "value": "gonfalon-integrations-crdb"
                        },
                        {
                          "name": "ENV_SHORT_NAME",
                          "value": "staging"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "554582317989"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/mild:latest",
                      "name": "run-migrations"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Run DB migrations for gonfalon-integrations-crdb",
          "refId": "run_db_migrations_gonfalon-integrations-crdb",
          "requisiteStageRefIds": [
            "bake_multi_region_ami"
          ],
          "source": "text",
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "run-db-migrations-gonfalon-workflows-crdb",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "command": [
                        "/bin/run-migrations"
                      ],
                      "env": [
                        {
                          "name": "SHA",
                          "value": "${ parameters['sha'] }"
                        },
                        {
                          "name": "DATABASE",
                          "value": "gonfalon-workflows-crdb"
                        },
                        {
                          "name": "ENV_SHORT_NAME",
                          "value": "staging"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "554582317989"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/mild:latest",
                      "name": "run-migrations"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Run DB migrations for gonfalon-workflows-crdb",
          "refId": "run_db_migrations_gonfalon-workflows-crdb",
          "requisiteStageRefIds": [
            "bake_multi_region_ami"
          ],
          "source": "text",
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "run-db-migrations-gonfalon-experimentation-crdb",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "command": [
                        "/bin/run-migrations"
                      ],
                      "env": [
                        {
                          "name": "SHA",
                          "value": "${ parameters['sha'] }"
                        },
                        {
                          "name": "DATABASE",
                          "value": "gonfalon-experimentation-crdb"
                        },
                        {
                          "name": "ENV_SHORT_NAME",
                          "value": "staging"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "554582317989"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/mild:latest",
                      "name": "run-migrations"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Run DB migrations for gonfalon-experimentation-crdb",
          "refId": "run_db_migrations_gonfalon-experimentation-crdb",
          "requisiteStageRefIds": [
            "bake_multi_region_ami"
          ],
          "source": "text",
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "clusters": [
            {
              "account": "launchdarkly-production",
              "application": "gonfalon",
              "associatePublicIpAddress": false,
              "availabilityZones": {
                "us-east-1": [
                  "us-east-1a",
                  "us-east-1b",
                  "us-east-1c"
                ]
              },
              "base64UserData": "",
              "capacity": {
                "desired": 2,
                "max": 2,
                "min": 2
              },
              "cloudProvider": "aws",
              "cooldown": 120,
              "copySourceCustomBlockDeviceMappings": false,
              "delayBeforeDisableSec": 60,
              "delayBeforeScaleDownSec": 300,
              "dirty": {},
              "ebsOptimized": false,
              "enabledMetrics": [
                "GroupMinSize",
                "GroupMaxSize",
                "GroupDesiredCapacity",
                "GroupInServiceInstances",
                "GroupPendingInstances",
                "GroupStandbyInstances",
                "GroupTerminatingInstances",
                "GroupTotalInstances"
              ],
              "freeFormDetails": "ld-stg",
              "healthCheckGracePeriod": 240,
              "healthCheckType": "ELB",
              "iamRole": "staging-gonfalon",
              "instanceMonitoring": true,
              "instanceType": "${ parameters.ec2_instance_type }",
              "keyPair": "ld_shared",
              "launchTemplateOverridesForInstanceType": null,
              "loadBalancers": [],
              "maxRemainingAsgs": 2,
              "moniker": {
                "app": "gonfalon",
                "detail": "ld-stg",
                "stack": "web"
              },
              "preferSourceCapacity": true,
              "provider": "aws",
              "rollback": {
                "onFailure": true
              },
              "scaleDown": true,
              "securityGroups": [
                "sg-6d2d7d09",
                "sg-8720fff0",
                "sg-ea3d2e95",
                "sg-b016fcd6",
                "sg-9eb16dd7",
                "sg-0f5148ef05cf05c3f",
                "sg-097f9a0a312508f21",
                "sg-0a6e9f9d25e69eb66",
                "sg-0c2a7585136e6ff6b",
                "sg-0aa07965745f27fd4",
                "sg-0a437487d63666bee",
                "sg-091749c543fb38405",
                "sg-050f06fe8c17db7e2",
                "sg-077d6bdb5d655df02",
                "sg-097e5a5ed46e7b6e4"
              ],
              "setLaunchTemplate": false,
              "spelLoadBalancers": [],
              "spelTargetGroups": [],
              "spotPrice": "",
              "stack": "web",
              "strategy": "redblack",
              "subnetType": "launchdarkly-private-subnet",
              "suspendedProcesses": [],
              "tags": {
                "Name": "gonfalon-web (staging)",
                "dogfoodCanary": "false",
                "env": "staging",
                "environment": "staging",
                "managed_by": "spinnaker",
                "owner": "common",
                "region": "us-east-1",
                "role": "gonfalon-web",
                "service": "app.launchdarkly.com",
                "sha": "${ parameters.sha }",
                "tier": "staging"
              },
              "targetGroups": [
                "gonfalon-web-ld-stg",
                "gonfalon-web-internal-ld-stg"
              ],
              "targetHealthyDeployPercentage": 100,
              "terminationPolicies": [
                "Default"
              ],
              "useAmiBlockDeviceMappings": true,
              "useSourceCapacity": true
            },
            {
              "account": "launchdarkly-production",
              "application": "gonfalon",
              "associatePublicIpAddress": false,
              "availabilityZones": {
                "us-east-1": [
                  "us-east-1a"
                ]
              },
              "base64UserData": "",
              "capacity": {
                "desired": 1,
                "max": 1,
                "min": 1
              },
              "cloudProvider": "aws",
              "cooldown": 120,
              "copySourceCustomBlockDeviceMappings": false,
              "delayBeforeDisableSec": 60,
              "delayBeforeScaleDownSec": 300,
              "dirty": {},
              "ebsOptimized": false,
              "enabledMetrics": [
                "GroupMinSize",
                "GroupMaxSize",
                "GroupDesiredCapacity",
                "GroupInServiceInstances",
                "GroupPendingInstances",
                "GroupStandbyInstances",
                "GroupTerminatingInstances",
                "GroupTotalInstances"
              ],
              "freeFormDetails": "ld-stg-dogfood-canary",
              "healthCheckGracePeriod": 240,
              "healthCheckType": "ELB",
              "iamRole": "staging-gonfalon",
              "instanceMonitoring": true,
              "instanceType": "${ parameters.ec2_instance_type }",
              "keyPair": "ld_shared",
              "launchTemplateOverridesForInstanceType": null,
              "loadBalancers": [],
              "maxRemainingAsgs": 2,
              "moniker": {
                "app": "gonfalon",
                "detail": "ld-stg",
                "stack": "web"
              },
              "preferSourceCapacity": true,
              "provider": "aws",
              "rollback": {
                "onFailure": true
              },
              "scaleDown": true,
              "securityGroups": [
                "sg-6d2d7d09",
                "sg-8720fff0",
                "sg-ea3d2e95",
                "sg-b016fcd6",
                "sg-9eb16dd7",
                "sg-0f5148ef05cf05c3f",
                "sg-097f9a0a312508f21",
                "sg-0a6e9f9d25e69eb66",
                "sg-0c2a7585136e6ff6b",
                "sg-0aa07965745f27fd4",
                "sg-0a437487d63666bee",
                "sg-091749c543fb38405",
                "sg-050f06fe8c17db7e2",
                "sg-077d6bdb5d655df02",
                "sg-097e5a5ed46e7b6e4"
              ],
              "setLaunchTemplate": false,
              "spelLoadBalancers": [],
              "spelTargetGroups": [],
              "spotPrice": "",
              "stack": "web",
              "strategy": "redblack",
              "subnetType": "launchdarkly-private-subnet",
              "suspendedProcesses": [],
              "tags": {
                "Name": "gonfalon-web (staging)",
                "dogfoodCanary": "true",
                "env": "staging",
                "environment": "staging",
                "managed_by": "spinnaker",
                "owner": "common",
                "region": "us-east-1",
                "role": "gonfalon-web",
                "service": "app.launchdarkly.com",
                "sha": "${ parameters.sha }",
                "tier": "staging"
              },
              "targetGroups": [
                "gonfalon-web-ld-stg",
                "gonfalon-web-internal-ld-stg"
              ],
              "targetHealthyDeployPercentage": 100,
              "terminationPolicies": [
                "Default"
              ],
              "useAmiBlockDeviceMappings": true,
              "useSourceCapacity": true
            }
          ],
          "customSubject": "Deployed gonfalon-web-${ parameters['sha'] } to staging",
          "name": "Deploy application to AWS",
          "notifications": [
            {
              "address": "changelog-staging@launchdarkly.com",
              "level": "stage",
              "message": {
                "stage.complete": {
                  "text": "Details: Deployed gonfalon-web-${ parameters['sha'] } to staging.  The diff is: https://github.com/launchdarkly/gonfalon/compare/${ #stage('Determine current version')['status'].toString() == 'SUCCEEDED' ? #stage('Determine current version')['context']['webhook']['body']['version'] : 'unknown' }...${ parameters['sha'] }\n\n!staging !deploy\n\nWho: ${ trigger['user'] } via ${ trigger['type'] } trigger\n\nTopic: gonfalon-web\n\nWhen: ${ new java.text.SimpleDateFormat('EEE MMM d HH:mm:ss z YYYY').format(new java.util.Date())}\n\n"
                }
              },
              "type": "email",
              "when": [
                "stage.complete"
              ]
            }
          ],
          "overrideTimeout": true,
          "refId": "deploy_aws_redblack",
          "requisiteStageRefIds": [
            "bake_multi_region_ami",
            "run_db_migrations_coderefs-crdb",
            "run_db_migrations_oauth2-crdb",
            "run_db_migrations_accounts-crdb",
            "run_db_migrations_gonfalon-accounts-crdb",
            "run_db_migrations_gonfalon-billing-crdb",
            "run_db_migrations_gonfalon-file-jobs-crdb",
            "run_db_migrations_gonfalon-integrations-crdb",
            "run_db_migrations_gonfalon-workflows-crdb",
            "run_db_migrations_gonfalon-experimentation-crdb"
          ],
          "sendNotifications": true,
          "stageTimeoutMs": 2700000,
          "type": "deploy"
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "completeOtherBranchesThenFail": true,
          "continuePipeline": true,
          "credentials": "kubernetes",
          "failPipeline": false,
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "notifier",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "env": [
                        {
                          "name": "METHOD",
                          "value": "POST"
                        },
                        {
                          "name": "URL",
                          "value": "https://app.sleuth.io/api/1/deployments/launchdarkly/gonfalon-web/register_deploy?ignore_if_duplicate=true"
                        },
                        {
                          "name": "BODY",
                          "value": ""
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "FORM_api_key",
                          "value": "{{`{{ ssm \"${ parameters.sleuth_api_key_ssm_path }\" }}`}}"
                        },
                        {
                          "name": "FORM_environment",
                          "value": "staging"
                        },
                        {
                          "name": "FORM_sha",
                          "value": "${ parameters.sha }"
                        },
                        {
                          "name": "ASSUME_ROLE",
                          "value": "SpinnakerManagedRole"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "554582317989"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/notifier:latest",
                      "name": "notifier"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Publish to Sleuth",
          "refId": "sleuth_publish",
          "requisiteStageRefIds": [
            "deploy_aws_redblack"
          ],
          "source": "text",
          "stageEnabled": {
            "expression": "sleuth_api_key_ssm_path != ''",
            "type": "expression"
          },
          "stageTimeoutMs": 60000,
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "completeOtherBranchesThenFail": true,
          "continuePipeline": true,
          "credentials": "kubernetes",
          "failPipeline": false,
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "notifier",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "env": [
                        {
                          "name": "METHOD",
                          "value": "POST"
                        },
                        {
                          "name": "URL",
                          "value": "https://api.honeycomb.io/1/markers/staging"
                        },
                        {
                          "name": "BODY",
                          "value": "{\n\t\t\"message\" : \"gonfalon - staging - Deployment - sha: ${ parameters.sha }\",\n\t\t\"type\":\"deploy\"\n\t}"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "ASSUME_ROLE",
                          "value": "SpinnakerManagedRole"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "554582317989"
                        },
                        {
                          "name": "HEADER_Accept",
                          "value": "application/json"
                        },
                        {
                          "name": "HEADER_Content_Type",
                          "value": "application/json"
                        },
                        {
                          "name": "HEADER_X_Honeycomb_Team",
                          "value": "{{`{{ ssm \"${ parameters.honeycomb_api_key_ssm_path }\" }}`}}"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/notifier:latest",
                      "name": "notifier"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Publish to Honeycomb",
          "refId": "honeycomb_publish",
          "requisiteStageRefIds": [
            "deploy_aws_redblack"
          ],
          "source": "text",
          "stageEnabled": {
            "expression": "honeycomb_api_key_ssm_path != ''",
            "type": "expression"
          },
          "stageTimeoutMs": 60000,
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "failPipeline": false,
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "notifier",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "env": [
                        {
                          "name": "METHOD",
                          "value": "POST"
                        },
                        {
                          "name": "URL",
                          "value": "https://app.ld.catamorphic.com/api/v2/accelerate/deployment-events"
                        },
                        {
                          "name": "BODY",
                          "value": "{\n  \"environmentKey\": \"staging\",\n  \"eventType\": \"started\",\n  \"projectKey\": \"default\",\n  \"service\": \"gonfalon\",\n  \"version\": \"${ parameters.sha }\"\n}"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "HEADER_Authorization",
                          "value": "{{`{{ ssm \"/shared-services/common/services/accelerate/ld_api_key\" }}`}}"
                        },
                        {
                          "name": "HEADER_Content_Type",
                          "value": "application/json"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/notifier:latest",
                      "name": "notifier"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Send Accelerate started notification",
          "refId": "accelerate_started",
          "requisiteStageRefIds": [
            "determine_deployed_app_version"
          ],
          "source": "text",
          "stageEnabled": {
            "expression": "",
            "type": "expression"
          },
          "stageTimeoutMs": 60000,
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "failPipeline": false,
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "notifier",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "env": [
                        {
                          "name": "METHOD",
                          "value": "POST"
                        },
                        {
                          "name": "URL",
                          "value": "https://app.ld.catamorphic.com/api/v2/accelerate/deployment-events"
                        },
                        {
                          "name": "BODY",
                          "value": "{\n  \"environmentKey\": \"staging\",\n  \"eventType\": \"finished\",\n  \"projectKey\": \"default\",\n  \"service\": \"gonfalon\",\n  \"version\": \"${ parameters.sha }\"\n}"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "HEADER_Authorization",
                          "value": "{{`{{ ssm \"/shared-services/common/services/accelerate/ld_api_key\" }}`}}"
                        },
                        {
                          "name": "HEADER_Content_Type",
                          "value": "application/json"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/notifier:latest",
                      "name": "notifier"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Send Accelerate finished notification",
          "refId": "accelerate_finished",
          "requisiteStageRefIds": [
            "deploy_aws_redblack"
          ],
          "source": "text",
          "stageEnabled": {
            "expression": "",
            "type": "expression"
          },
          "stageTimeoutMs": 60000,
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "failPipeline": false,
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "notifier",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "env": [
                        {
                          "name": "METHOD",
                          "value": "POST"
                        },
                        {
                          "name": "URL",
                          "value": "https://circleci.com/api/v2/project/gh/launchdarkly/gonfalon/pipeline"
                        },
                        {
                          "name": "BODY",
                          "value": "{\n\t\t\t\"parameters\": { \"run_cypress_staging\": true }\n\t\t}"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "HEADER_Circle_Token",
                          "value": "{{`{{ ssm \"/global/services/circle-ci/api-token\" }}`}}"
                        },
                        {
                          "name": "HEADER_Content_Type",
                          "value": "application/json"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/notifier:latest",
                      "name": "notifier"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Trigger Cypress tests",
          "refId": "cypress",
          "requisiteStageRefIds": [
            "deploy_aws_redblack"
          ],
          "source": "text",
          "stageEnabled": {
            "expression": "",
            "type": "expression"
          },
          "stageTimeoutMs": 60000,
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "failPipeline": false,
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "notifier",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "env": [
                        {
                          "name": "METHOD",
                          "value": "POST"
                        },
                        {
                          "name": "URL",
                          "value": "https://calibreapp.com/api/sites/gonfalon-staging/deploys"
                        },
                        {
                          "name": "BODY",
                          "value": "{\n\t\t\"secret\": \"{{`{{ ssm \"/shared-services/us-east-1/applications/spinnaker/gonfalon_staging_calibre_site_secret\" }}`}}\",\n\t\t\"revision\": \"${ parameters.sha }\"\n\t}"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "HEADER_Accept",
                          "value": "application/json"
                        },
                        {
                          "name": "HEADER_Content_Type",
                          "value": "application/json"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/notifier:latest",
                      "name": "notifier"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Post deploy to Calibre",
          "refId": "calibre",
          "requisiteStageRefIds": [
            "deploy_aws_redblack"
          ],
          "source": "text",
          "stageEnabled": {
            "expression": "",
            "type": "expression"
          },
          "stageTimeoutMs": 60000,
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "credentials": "kubernetes",
          "failPipeline": false,
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "notifier",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "env": [
                        {
                          "name": "METHOD",
                          "value": "POST"
                        },
                        {
                          "name": "URL",
                          "value": "https://thumbseeker.launchdarkly.com/promotion"
                        },
                        {
                          "name": "BODY",
                          "value": "{\n\t\t\"sha\": \"${ parameters.sha }\",\n\t\t\"service\": \"gonfalon\",\n\t\t\"environment\": \"staging\",\n\t\t\"check\": \"spinnaker\"\n\t}"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "HEADER_Content_Type",
                          "value": "application/json"
                        },
                        {
                          "name": "HEADER_X_LaunchDarkly_Secret",
                          "value": "{{`{{ ssm \"/shared-services/us-east-1/applications/thumbseeker/internal_secret\" }}`}}"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/notifier:latest",
                      "name": "notifier"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Trigger Thumb Seeker promotion",
          "refId": "thumbseeker",
          "requisiteStageRefIds": [
            "deploy_aws_redblack"
          ],
          "source": "text",
          "stageEnabled": {
            "expression": "",
            "type": "expression"
          },
          "stageTimeoutMs": 60000,
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "continuePipeline": true,
          "credentials": "kubernetes",
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "run-redocly-deploy",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "env": [
                        {
                          "name": "REDOCLY_API_TOKEN_SSM_PATH",
                          "value": "/production/common/services/apidocs/redocly_api_key"
                        },
                        {
                          "name": "OPENAPI_VERSION",
                          "value": "20191212"
                        },
                        {
                          "name": "REDOCLY_REGISTRY",
                          "value": "LaunchDarkly Staging"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/redocly-deploy:latest",
                      "name": "redocly-deploy"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Run Deploy API Docs",
          "refId": "deploy_redocly",
          "requisiteStageRefIds": [
            "deploy_aws_redblack"
          ],
          "source": "text",
          "type": "runJobManifest",
          "waitForCompletion": true
        },
        {
          "continuePipeline": true,
          "failPipeline": false,
          "method": "POST",
          "name": "Notify #ops-staging deploy finished",
          "overrideTimeout": true,
          "payload": {
            "channel": "#ops-staging",
            "text": "${ trigger.user } is done deploying gonfalon-web - staging with version ${ parameters.sha }. Check it out!"
          },
          "refId": "notification_deploy_finish_ops-staging",
          "requisiteStageRefIds": [
            "deploy_aws_redblack",
            "sleuth_publish",
            "honeycomb_publish",
            "cypress",
            "calibre",
            "thumbseeker",
            "deploy_redocly"
          ],
          "stageTimeoutMs": 60000,
          "type": "webhook",
          "url": "https://hooks.slack.com/services/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"
        },
        {
          "account": "kubernetes",
          "alias": "runJob",
          "application": "gonfalon",
          "cloudProvider": "kubernetes",
          "completeOtherBranchesThenFail": true,
          "continuePipeline": true,
          "credentials": "kubernetes",
          "failPipeline": false,
          "manifest": {
            "apiVersion": "batch/v1",
            "kind": "Job",
            "metadata": {
              "generateName": "notifier",
              "namespace": "armory"
            },
            "spec": {
              "backoffLimit": 0,
              "template": {
                "spec": {
                  "containers": [
                    {
                      "env": [
                        {
                          "name": "METHOD",
                          "value": "POST"
                        },
                        {
                          "name": "URL",
                          "value": "https://api.rollbar.com/api/1/deploy"
                        },
                        {
                          "name": "BODY",
                          "value": "{\n\t\t\"access_token\":   \"{{`{{ ssm \"${ parameters.rollbar_access_token_ssm_path }\" }}`}}\",\n\t\t\"environment\":    \"staging\",\n\t\t\"local_username\": \"${ trigger.user }\",\n\t\t\"revision\":       \"${ parameters.sha }\",\n\t\t\"status\":         \"succeeded\"\n\t}"
                        },
                        {
                          "name": "AWS_REGION",
                          "value": "us-east-1"
                        },
                        {
                          "name": "ASSUME_ROLE",
                          "value": "SpinnakerManagedRole"
                        },
                        {
                          "name": "AWS_ACCOUNT_ID",
                          "value": "554582317989"
                        }
                      ],
                      "image": "061661829416.dkr.ecr.us-east-1.amazonaws.com/spinnaker-jobs/notifier:latest",
                      "name": "notifier"
                    }
                  ],
                  "restartPolicy": "Never"
                }
              }
            }
          },
          "name": "Publish to Rollbar (succeeded)",
          "refId": "rollbar_succeeded",
          "requisiteStageRefIds": [
            "deploy_aws_redblack"
          ],
          "source": "text",
          "stageEnabled": {
            "expression": "parameters.rollbar_access_token_ssm_path != ''",
            "type": "expression"
          },
          "stageTimeoutMs": 60000,
          "type": "runJobManifest",
          "waitForCompletion": true
        }
      ],
      "triggers": [
        {
          "enabled": true,
          "expectedArtifactIds": [],
          "payloadConstraints": {
            "status": "completed"
          },
          "runAsUser": "api-service-account@launchdarkly.com",
          "source": "48ea138e-a104-4f59-a1b1-bbc06b9b5ca9",
          "type": "webhook"
        }
      ]
    }
  ]
}
